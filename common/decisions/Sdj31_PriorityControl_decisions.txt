
####################################################
####################################################
#####                                          #####
#####    Job Priority Manager                  #####
#####                                          #####
#####    Decision to Call Menu, Some Others    #####
#####                                          #####
####################################################
####################################################
#
#	memo: Difference of 2 edicts for calling menu is only trigger (potential) and localization key.
#

### Regular Empire
SdjDecisionCallPriorityMenuRegular = {
	resources = {
		category = decisions
		cost = {
			trigger = { NOT = { has_planet_flag = SdjFlagHasSetJobPriorityIndividually@owner } }
			influence = 10
		}
	}
	
	owned_planets_only = yes
	potential = {
		exists = owner
		exists = controller
		owner = {
			SdjTriggerAvailableCountryRegular = yes
			is_same_value = prev.controller
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = SdjTextMenuOpenedNow
			owner = {
				NOR = {
					has_country_flag = SdjFlagSpeciesMenuOpened
					has_country_flag = SdjFlagPriorityMenuOpened
				}
			}
		}
	}
	ai_weight = { weight = 0 }
	
	effect = {
		custom_tooltip = SdjDecisionCallPriorityMenuRegularEffect_desc
		hidden_effect = {
			save_event_target_as = SdjTargetCurrentConfigurated
			set_planet_flag = SdjFlagOwnerCheckForJobPriority@owner
			if = {
				limit = { NOT = { has_planet_flag = SdjFlagSetJobPriorityIndividually@owner } }
				SdjEffectRemoveIndividualPriorityFlag = yes
				SdjEffectResetPriorityConfigurations = yes
				set_planet_flag = SdjFlagSetJobPriorityIndividually@owner		## Removed if Decision Invalidated
				set_planet_flag = SdjFlagHasSetJobPriorityIndividually@owner		## Never Removed Once Set
			}
			if = {
				limit = { NOT = { has_modifier = SdjModifierSetPriorityIndividuallyRegular } }
				add_modifier = { modifier = SdjModifierSetPriorityIndividuallyRegular days = -1 }
			}
			owner = {
				set_country_flag = SdjFlagPlanetPriorityMenuOpened
				country_event = { id = SdjEvent.2011 }
			}
		}
	}
}


### Gestalt Empire
SdjDecisionCallPriorityMenuGestalt = {
	resources = {
		category = decisions
		cost = {
			trigger = { NOT = { has_planet_flag = SdjFlagSetJobPriorityIndividually@owner } }
			influence = 10
		}
	}
	
	owned_planets_only = yes
	potential = {
		exists = owner
		exists = controller
		owner = {
			SdjTriggerAvailableCountryGestalt = yes
			is_same_value = prev.controller
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = SdjTextMenuOpenedNow
			owner = {
				NOR = {
					has_country_flag = SdjFlagSpeciesMenuOpened
					has_country_flag = SdjFlagPriorityMenuOpened
				}
			}
		}
	}
	ai_weight = { weight = 0 }
	
	effect = {
		custom_tooltip = SdjDecisionCallPriorityMenuGestaltEffect_desc
		hidden_effect = {
			save_event_target_as = SdjTargetCurrentConfigurated
			set_planet_flag = SdjFlagOwnerCheckForJobPriority@owner
			if = {
				limit = { NOT = { has_planet_flag = SdjFlagSetJobPriorityIndividually@owner } }
				SdjEffectRemoveIndividualPriorityFlag = yes
				SdjEffectResetPriorityConfigurations = yes
				set_planet_flag = SdjFlagSetJobPriorityIndividually@owner		## Removed if Decision Invalidated
				set_planet_flag = SdjFlagHasSetJobPriorityIndividually@owner		## Never Removed Once Set
			}
			if = {
				limit = { NOT = { has_modifier = SdjModifierSetPriorityIndividuallyGestalt } }
				add_modifier = { modifier = SdjModifierSetPriorityIndividuallyGestalt days = -1 }
			}
			owner = {
				set_country_flag = SdjFlagPlanetPriorityMenuOpened
				country_event = { id = SdjEvent.2011 }
			}
		}
	}
}


### Fire Everyone
SdjDecisionFireEveryone = {
	icon = decision_expel_population
	resources = {
		category = decisions
		cost = { influence =   10 trigger = {                           num_pops <   15 } }
		cost = { influence =   15 trigger = { NOT = { num_pops <   15 } num_pops <   20 } }
		cost = { influence =   20 trigger = { NOT = { num_pops <   20 } num_pops <   25 } }
		cost = { influence =   25 trigger = { NOT = { num_pops <   25 } num_pops <   30 } }
		cost = { influence =   30 trigger = { NOT = { num_pops <   30 } num_pops <   35 } }
		cost = { influence =   35 trigger = { NOT = { num_pops <   35 } num_pops <   40 } }
		cost = { influence =   40 trigger = { NOT = { num_pops <   40 } num_pops <   45 } }
		cost = { influence =   45 trigger = { NOT = { num_pops <   45 } num_pops <   50 } }
		cost = { influence =   50 trigger = { NOT = { num_pops <   50 } num_pops <   55 } }
		cost = { influence =   55 trigger = { NOT = { num_pops <   55 } num_pops <   60 } }
		cost = { influence =   60 trigger = { NOT = { num_pops <   60 } num_pops <   65 } }
		cost = { influence =   65 trigger = { NOT = { num_pops <   65 } num_pops <   70 } }
		cost = { influence =   70 trigger = { NOT = { num_pops <   70 } num_pops <   75 } }
		cost = { influence =   75 trigger = { NOT = { num_pops <   75 } num_pops <   80 } }
		cost = { influence =   80 trigger = { NOT = { num_pops <   80 } num_pops <   85 } }
		cost = { influence =   85 trigger = { NOT = { num_pops <   85 } num_pops <   90 } }
		cost = { influence =   90 trigger = { NOT = { num_pops <   90 } num_pops <   95 } }
		cost = { influence =   95 trigger = { NOT = { num_pops <   95 } num_pops <  100 } }
		cost = { influence =  100 trigger = { NOT = { num_pops <  100 } num_pops <  110 } }
		cost = { influence =  110 trigger = { NOT = { num_pops <  110 } num_pops <  120 } }
		cost = { influence =  120 trigger = { NOT = { num_pops <  120 } num_pops <  130 } }
		cost = { influence =  130 trigger = { NOT = { num_pops <  130 } num_pops <  140 } }
		cost = { influence =  140 trigger = { NOT = { num_pops <  140 } num_pops <  150 } }
		cost = { influence =  150 trigger = { NOT = { num_pops <  150 } num_pops <  160 } }
		cost = { influence =  160 trigger = { NOT = { num_pops <  160 } num_pops <  170 } }
		cost = { influence =  170 trigger = { NOT = { num_pops <  170 } num_pops <  180 } }
		cost = { influence =  180 trigger = { NOT = { num_pops <  180 } num_pops <  190 } }
		cost = { influence =  190 trigger = { NOT = { num_pops <  190 } num_pops <  200 } }
		cost = { influence =  200 trigger = { NOT = { num_pops <  200 } num_pops <  220 } }
		cost = { influence =  200 trigger = { NOT = { num_pops <  200 } num_pops <  225 } }
		cost = { influence =  225 trigger = { NOT = { num_pops <  225 } num_pops <  250 } }
		cost = { influence =  250 trigger = { NOT = { num_pops <  250 } num_pops <  275 } }
		cost = { influence =  275 trigger = { NOT = { num_pops <  275 } num_pops <  300 } }
		cost = { influence =  300 trigger = { NOT = { num_pops <  300 } num_pops <  350 } }
		cost = { influence =  350 trigger = { NOT = { num_pops <  350 } num_pops <  400 } }
		cost = { influence =  400 trigger = { NOT = { num_pops <  400 } num_pops <  450 } }
		cost = { influence =  450 trigger = { NOT = { num_pops <  450 } num_pops <  500 } }
		cost = { influence =  500 trigger = { NOT = { num_pops <  500 } num_pops <  600 } }
		cost = { influence =  600 trigger = { NOT = { num_pops <  600 } num_pops <  700 } }
		cost = { influence =  700 trigger = { NOT = { num_pops <  700 } num_pops <  800 } }
		cost = { influence =  800 trigger = { NOT = { num_pops <  800 } num_pops <  900 } }
		cost = { influence =  900 trigger = { NOT = { num_pops <  900 } num_pops < 1000 } }
		cost = { influence = 1000 trigger = { NOT = { num_pops < 1000 } } }
	}
	
	potential = {
		exists = owner
		exists = controller
		owner = {
			SdjTriggerAvailableCountryRegular = yes
			is_same_value = prev.controller
		}
	}
	allow = {
		custom_tooltip = {
			fail_text = SdjTextEveryoneFiredRecently
			NOR = {
				has_modifier = SdjModifierEveryoneFired
				has_planet_flag = SdjFlagEveryoneFired@owner
				has_planet_flag = SdjFlagEveryoneFiredRecently@owner
			}
		}
	}
	ai_weight = { weight = 0 }	
	
	effect = {
		custom_tooltip = SdjDecisionFireEveryoneEffect_desc
		hidden_effect = {
			if = {
				limit = { always = yes }		## yes: standard, no: debug
				add_modifier = { modifier = SdjModifierEveryoneFired days = 180 }
				set_timed_planet_flag = { flag = SdjFlagEveryoneFired@owner days = 181 }
				set_timed_planet_flag = { flag = SdjFlagEveryoneFiredRecently@owner days = 3600 }
				
				planet_event = { id = SdjEvent.0301 days = 180 }
				every_owned_pop = {
					if = {
						limit = { is_pop_category = ruler }
						set_pop_flag = SdjFlagPopFormerCat_ruler
					} else_if = {
						limit = { is_pop_category = specialist }
						set_pop_flag = SdjFlagPopFormerCat_specialist
					}
					pop_event = { id = SdjEvent.0302 days = 195 }		## Backup Code
				}
			} else = {
				### For Only Debugging
				add_modifier = { modifier = SdjModifierEveryoneFired days = 20 }
				set_timed_planet_flag = { flag = SdjFlagEveryoneFired@owner days = 21 }
				set_timed_planet_flag = { flag = SdjFlagEveryoneFiredRecently@owner days = 25 }
				
				planet_event = { id = SdjEvent.0301 days = 20 }
				every_owned_pop = {
					if = {
						limit = { is_pop_category = ruler }
						set_pop_flag = SdjFlagPopFormerCat_ruler
					} else_if = {
						limit = { is_pop_category = specialist }
						set_pop_flag = SdjFlagPopFormerCat_specialist
					}
					pop_event = { id = SdjEvent.0302 days = 35 }		## Backup Code
				}
			}
		}
	}
}


