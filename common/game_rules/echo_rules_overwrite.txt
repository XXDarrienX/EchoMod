# this = ship
# root = country that kills ship
##Overwrite to stop normal FEs to drop Debris
can_spawn_debris = {	
	root = { is_country_type = default }
	exists = owner
	owner = { 
		NOR = { 
			has_ascension_perk = ap_enigmatic_engineering 
            is_country_type = fallen_empire
            has_civic = civic_hive_strong_connection
		} 
	}
}

can_build_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
        OR = {
		    has_authority = auth_corporate
			has_valid_civic = civic_mutualistic_behavior
			has_valid_civic = civic_machine_servitor
        }
	}
}

# This = country
can_support_branch_offices = {
	is_country_type = default
	is_regular_empire = yes
	NOT = {
		OR = {
			has_authority = auth_hive_mind
			has_authority = auth_machine_intelligence
		}
	}
}

# This = planet
# Root = country
can_build_branch_office_on_planet = {
	custom_tooltip = {
		fail_text = requires_recipient_not_fanatic_purifiers
		exists = owner
		owner = {
			OR = {
				is_same_species = root
				NOT = { has_civic = civic_fanatic_purifiers }
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_COMMERCIAL_PACT
		exists = owner
		OR = {
			root = { is_criminal_syndicate = yes }
			root = {  has_valid_civic = civic_mutualistic_behavior }
			owner = { has_commercial_pact = root }
			owner = { is_in_federation_with = root }

			# allow branch offices in subsidiaries and vice versa
			root = {
				is_subject = yes
				is_subject_type = subsidiary
				overlord = { is_same_value = owner }
			}
			owner = {
				is_subject = yes
				is_subject_type = subsidiary
				overlord = { is_same_value = root }
			}
		}
	}
	
#	custom_tooltip = {
#		fail_text = BRANCH_OFFICE_NOT_CRIMINAL_AND_HOST_IS_MEGACORP
#		exists = owner
#		
#		OR = {
#			owner = {
#				NOT = { has_authority = auth_corporate }
#			}
#			AND = {
#				owner = { has_authority = auth_corporate }
#				root = { is_criminal_syndicate = yes }
#			}
#		}
#	}
	
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_SELF
		exists = owner
		
		owner =	{
			NOT = { is_same_value = root }
		}
	}
	
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_COOLDOWN
		exists = owner
		OR = {
			root = { is_criminal_syndicate = no }
			AND = {
				root = { is_criminal_syndicate = yes }
				NOT = { has_planet_flag = criminal_branch_closed_cooldown_planet@root }
			}
		}
	}
}

species_can_live_on_planet = {
	exists = root
	NAND = {
		root = { is_planet_class = pc_machine }
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			AND = {
				has_trait = trait_cybernetic
				exists = root.owner
				root.owner = {
					has_authority = auth_machine_intelligence
					has_civic = civic_machine_assimilator # Assimilator empire
				}
			}
		}
	}
	NAND = {
		root = { is_planet_class = pc_hive }
		NOT = { has_trait = trait_hive_mind }
	}
	NAND = {
		root = { is_planet_class = pc_shrouded_paradise }
		NOR = {
			has_trait = trait_psionic
			has_trait = trait_holy_machines
			has_trait = trait_pc_shrouded_paradise_preference
		}
    }
	NAND = {
		root = { NOT = { is_planet_class = pc_matryoshka } }
		has_trait = trait_digital
	}	
}

# THIS = Fleet
fleet_uses_templates = {
	is_ship_class = shipclass_military
	is_designable = yes
	is_alliance_fleet = yes
}

# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = {
	custom_tooltip = {
		success_text = "debug: can jump"
		fail_text = cannot_jump_to_system

		# Sealed system
		OR = {
			NOT = { has_star_flag = sealed_system }
			AND = {
				root = { has_country_flag = entered_sealed_system }
				has_star_flag = sealed_system
			}
		}

		# L-Cluster
		NOT = { has_star_flag = lcluster }
	}
	custom_tooltip = {
		fail_text = jump_jammer_online
		this = {
			NOT = { starbase = { has_starbase_building = echo_cyno_jammer } }
		}
	}
	#NOT = { root = { has_policy_flag = jump_drive_disabled  } }
}

# Determines if the "per_neighbor_rival" static modifier should be applied to an empire
# this: country
should_apply_neighbor_rival_modifier = {
	OR = {
		has_non_swapped_tradition = tr_supremacy_great_game
		has_swapped_tradition = tr_supremacy_great_game_hive
	}
}

# This = country
# Checked by is_criminal_syndicate trigger
is_criminal_syndicate_rule = {
	exists = this
	has_authority = auth_corporate
	has_valid_civic = civic_criminal_heritage
}

#This = country, suject
#Root = country, overlord
#From = target solar system
#This rule is a condition for when subjects that normally cannot colonize outside their borders are allowed to
subject_can_expand = {
	OR = {
		root = { has_valid_civic = civic_feudal_realm }
		this = { is_subject_type = protectorate }
	}
}

# This = planet
can_crossbreed_species_on_planet = {
	OR = {
	AND = {
	exists = owner
    OR = {
        has_building = building_brothel_house
        has_building = building_brothel_house_branch_office 
        owner = { has_ascension_perk = ap_xeno_compatibility }
    }
	count_species = {
		limit = { 
			is_crossbreeding_possible = yes
		}
		count >= 2
		}
	}
	AND = {
	exists = owner
	owner = { 
	has_ascension_perk = ap_life_masters
	}	
	count_species = {
		limit = { 
			has_trait = trait_hive_mind
		}
		count >= 2
	}
	}
	}
}
# This = species one
# Root = species two
can_crossbreed_species = {

	OR = {
	AND = {
		is_crossbreeding_possible = yes
		root = { is_crossbreeding_possible = yes }
	}
	
	AND = {
		owner = { 	has_ascension_perk = ap_life_masters	}
		has_trait = trait_hive_mind
		root = { has_trait = trait_hive_mind }
	}
	
	}
	NOR = {
			is_subspecies = root
			root = { is_subspecies = prev }
		}
	}

# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = {
	is_sapient = yes
	OR = {
		AND = {
				Root = {
					owner = {
					is_hive_empire = no				
					}				
			}		
			OR = {
				has_trait = trait_machine_unit
				has_trait = trait_mechanical
				}
			}
		AND = {
		is_same_species = root.owner
		Root = {
					owner = {
					AND = {
					has_ascension_perk = ap_life_assemblers
					NOT = { has_ascension_perk = ap_life_masters}
					}					
					}				
			}
		}
		AND = {
		Root = {
				owner = {
					AND = {
					has_origin = origin_hive_overmind 
					has_ascension_perk = ap_life_assemblers
					NOT = { has_ascension_perk = ap_life_masters }					
					}	
					}					
					}
				 has_species_flag = overminded_flag 				
			}				
		AND = {
		Root = {
			owner = {
					has_ascension_perk = ap_life_masters
					}
			}					
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			}					
		}
		AND = {
			root = {
				owner = {
					has_origin = origin_religious_constructs
				}
				has_species_flag = holy_robots
				has_trait = trait_holy_machines
			}
		}
	}
}

# This = Planet
can_resettle_planet = {
	is_controlled_by = owner
	has_ground_combat = no
	has_orbital_bombardment = no
	owner = {
		OR = {
			has_policy_flag = resettlement_allowed
			is_gestalt = yes
			any_owned_species = {
				is_shackled_robot = yes
			}
			any_owned_planet = {
				OR = {
					has_modifier = doomsday_1
					has_modifier = doomsday_2
					has_modifier = doomsday_3
					has_modifier = doomsday_4
					has_modifier = doomsday_5
				}
				NOT = { is_planet_class = pc_matryoshka }
			}
		}
	}
	custom_tooltip = {
		text = "RESETTLE_PLANET_UNDER_COLONIZATION"
		exists = this
		is_under_colonization = no
	}
}

# This = pop
can_resettle_pop = {
	if = { #Done as an IF/ELSE so the tooltip isn't hideous and unreadable
		limit = { is_shackled_robot = yes }
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				OR = {
					has_modifier = doomsday_1
					has_modifier = doomsday_2
					has_modifier = doomsday_3
					has_modifier = doomsday_4
					has_modifier = doomsday_5
				}
			}
		}
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				has_modifier = planet_culture_shock
			}
		}
		OR = {
			is_same_species = planet.owner
			planet = {
				NOT = { has_modifier = planet_culture_shock }
			}
		}
	}
	else = {
		owner = {
			OR = {
				has_policy_flag = resettlement_allowed
				is_gestalt = yes
			}
		}
	}
	else_if = {
		NOT = { has_trait = trait_digital }
	}
}

# ROOT = country
# THIS = pop
can_be_sold_on_slave_market = {
	NOT = {
		root = { has_country_flag = block_ai }
	}
	NOR = {
		has_trait = trait_holy_machines
		has_trait = trait_vb_psi_soul_eater
	}
	OR = {
		is_enslaved = yes
		is_non_sapient_robot = yes
		is_shackled_robot = yes
	}
	OR ={
		ROOT = { is_ai = no }
		has_citizenship_rights = no
		AND = {
			is_unemployed = yes
			planet = {
				count_pops = {
					count > 3
					limit = { is_unemployed = yes }
				}
			}
		}
	}
	if = {
		limit = {
			has_global_flag = organic_slave_trade_banned_flag
		}
		is_organic_species = no
	}
	if = {
		limit = {
			has_global_flag = sentient_slave_trade_banned_flag
		}
		is_sapient = no
	}
}

# THIS = Fleet
can_jump_drive = {
	#always = yes	# Moved cooldown to code
	this = {
		NOT = {
			has_fleet_flag = echo_jump_cooldown
		}
	}
}

# This = country
can_see_galactic_community = {
	OR = {
		has_country_flag = galcom_form_aye
		has_country_flag = galcom_form_nay
		is_galactic_community_member = yes
		is_fallen_empire = yes
	}
}