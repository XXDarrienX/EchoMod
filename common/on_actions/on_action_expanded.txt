# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		countryexpanded.42
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		anomalymod.85
		anomalymod.90
		countryexpanded.65
		countryexpanded.103
		colonyexpanded.102
		colonyexpanded.199
	}
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		anomalymod.40
		anomalymod.42
		anomalymod.214
		colonyexpanded.299
		countryexpanded.60
		countryexpanded.204
		gamestartexpanded.6
		primitivesexpanded.49
	}
}

# Triggers when the game starts
on_game_start = {
	events = {
		gamestartexpanded.1
	}
}

# Triggered when two empires discover each other
# This = Country which established the communications
# From = Country which communications were established with
on_first_contact = {
	events = {
		countryexpanded.43
		countryexpanded.44
	}
}

# Triggered when an Empire has fleets within another Empire's borders.
# This = receiver
# From = sender
# FromFrom = fleet
# FromFromFrom = system
on_enforce_borders = {
	events = {
		countryexpanded.43
		countryexpanded.44
	}
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_research_station = {
	events = {
		anomalymod.233
	}
}

# Executed right before a country has established communications with another country
# This = Country which established the communications
# From = Country which communications were established with
on_pre_communications_established = {
	events = {
		countryexpanded.43
		countryexpanded.44
	}
}

# Executed right after country has established communications with another country
# This = Country which established the communications
# From = Country which communications were established with
on_post_communications_established = {
	events = {
		countryexpanded.43
		countryexpanded.44
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		colonyexpanded.50
		colonyexpanded.101
		colonyexpanded.310
	}
}

# This = Planet
on_blocker_cleared = {
	events = {
		colonyexpanded.51
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		colonyexpanded.100
		countryexpanded.31
		countryexpanded.39
		megaexpanded.12
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		anomalymod.20
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		countryexpanded.21
	}
}

on_colony_2_years_old = {
	events = {
		colonyexpanded.311
		countryexpanded.36
	}
}

on_colony_6_years_old = {
	random_events = {
		100 = 0
		
		1 = colonyexpanded.300
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		countryexpanded.100
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		countryexpanded.101
		countryexpanded.102
	}
}

# A status quo has been signed
# Root = Actor
# From = Recipient
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo = {
	events = {
		countryexpanded.101
		countryexpanded.102
	}
}

# A status quo has been signed, by force
# Root = Recipient
# From = Actor
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo_forced = {
	events = {
		countryexpanded.101
		countryexpanded.102
	}
}