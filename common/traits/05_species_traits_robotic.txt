trait_robot_power_drills = {
	cost = 2

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		planet_jobs_minerals_produces_mult = 0.15
	}
}

trait_robot_harvesters = {
	cost = 2

	allowed_archetypes = { ROBOT }

	modifier = {
		planet_jobs_food_produces_mult = 0.15
	}
}

trait_robot_superconductive = {
	cost = 2

	allowed_archetypes = { ROBOT MACHINE }
	
	# Droids and Machine only
	species_potential_add = {
		exists = from
		from = {
			OR = {
				has_authority = auth_machine_intelligence
				has_technology = tech_droid_workers
			}			
		}
	}

	modifier = {
		planet_jobs_energy_produces_mult = 0.15
	}
}

trait_robot_efficient_processors = {
	cost = 3

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		planet_jobs_produces_mult = 0.05
	}
}

trait_robot_logic_engines = {
	cost = 2
	opposites = {
		trait_robot_improved_logic
		trait_robot_organic_logic
		trait_robot_matrioshka_brain_link
		trait_robot_physicist
		trait_robot_sociologist
		trait_robot_engineer
		trait_robot_omniscient_physicist
		trait_robot_omniscient_sociologist
		trait_robot_omniscient_engineer
	}
	allowed_archetypes = { ROBOT MACHINE }

	# Synth and Machine only
	species_potential_add = {
		exists = from
		from = {
			OR = {
				has_authority = auth_machine_intelligence
				has_technology = tech_synthetic_workers
			}			
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	modifier = {
		planet_jobs_society_research_produces_mult = 0.10
		planet_jobs_physics_research_produces_mult = 0.10
		planet_jobs_engineering_research_produces_mult = 0.10
	}
}

trait_robot_loyalty_circuits = {
	cost = 2

	allowed_archetypes = { ROBOT }
    opposites = {
		trait_robot_compliant_circuitry
		trait_robot_governmental_circuitry
	}
	# Synth only
	species_potential_add = {
		exists = from
		from = {
			has_technology = tech_synthetic_workers
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	modifier = {
		pop_happiness = 0.1
	}
}

trait_robot_domestic_protocols = {
	cost = 2
	
	initial = no
	randomized = no

	allowed_archetypes = { ROBOT }
	
	# Synth and Droid only
	species_potential_add = {
		exists = from
		from = {
			has_technology = tech_droid_workers
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	custom_tooltip = TRAIT_DOMESTIC_PROTOCOLS_EFFECT
}

trait_robot_double_jointed = {
	cost = 1
    opposites = {
		trait_robot_bulky
		trait_robot_compartmentalization
		trait_robot_transformers
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_housing_usage_mult = -0.1
	}
}

trait_robot_bulky = {
	cost = -1
    opposites = {
		trait_robot_double_jointed
		trait_robot_compartmentalization
		trait_robot_transformers
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_housing_usage_mult = 0.1
	}
}

trait_robot_enhanced_memory = {
	cost = 2

	allowed_archetypes = { ROBOT MACHINE }
    opposites = {
		trait_robot_logical_storage
		trait_robot_quantum_memory
	}
	# Synth and Machine only
	species_potential_add = {
		exists = from
		from = {
			OR = {
				has_authority = auth_machine_intelligence		
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	modifier = {
		leader_skill_levels = 2
	}
}

trait_robot_emotion_emulators = {
	cost = 1
	opposites = { "trait_robot_uncanny" }
	allowed_archetypes = { MACHINE }
	custom_tooltip = TRAIT_EMOTION_EMULATORS_EFFECT
}

trait_robot_uncanny = {
	cost = -1
	opposites = { "trait_robot_emotion_emulators" }
	allowed_archetypes = { MACHINE }
	custom_tooltip = TRAIT_UNCANNY_EFFECT
}

trait_robot_durable = {
	cost = 1
    opposites = {
		trait_robot_high_maintenance
		trait_robot_self_servicing
		trait_robot_self_sufficiency
		trait_robot_neutronium_shielding
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		planet_pops_robotics_upkeep_mult = -0.10
	}
}

trait_robot_high_maintenance = {
	cost = -1
    opposites = {
		trait_robot_durable
		trait_robot_self_servicing
		trait_robot_self_sufficiency
		trait_robot_neutronium_shielding
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		planet_pops_robotics_upkeep_mult = 0.10
	}
}

trait_robot_learning_algorithms = {
	cost = 1
    opposites = {
		trait_robot_repurposed_hardware
		trait_robot_improved_algorithms
		trait_robot_organic_learning
	}

	allowed_archetypes = { ROBOT MACHINE }
	
	# Synth and Machine only
	species_potential_add = {
		exists = from
		from = {
			OR = {
				has_authority = auth_machine_intelligence		
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	modifier = {
		species_leader_exp_gain = 0.25
	}
}

trait_robot_repurposed_hardware = {
	cost = -1
    opposites = {
		trait_robot_learning_algorithms
		trait_robot_improved_algorithms
		trait_robot_organic_learning
	}

	allowed_archetypes = { ROBOT MACHINE }

	# Synth and Machine only
	species_potential_add = {
		exists = from
		from = {
			OR = {
				has_authority = auth_machine_intelligence		
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	
	modifier = {
		species_leader_exp_gain = -0.25
	}
}

trait_robot_mass_produced = {
	cost = 1
    opposites = {
		trait_robot_custom_made
		trait_robot_standardization
		trait_robot_self_assembly
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_assembly_speed = 0.15
	}
}

trait_robot_custom_made = {
	cost = -1
    opposites = {
		trait_robot_mass_produced
		trait_robot_standardization
		trait_robot_self_assembly
	}

	allowed_archetypes = { ROBOT MACHINE }

	modifier = {
		pop_assembly_speed = -0.15
	}
}

trait_robot_recycled = {
	cost = 2
    opposites = {
		trait_robot_luxurious
		trait_robot_flexible_designs
		trait_robot_scrapbots
	}

	allowed_archetypes = { ROBOT MACHINE }
	
	#assembling_modifier, declining_modifier, growing_modifier are applied to planet when pop is the one assembling/declining/growing	
	assembling_modifier = {
		planet_pop_assemblers_upkeep_mult = -0.20
	}
}

trait_robot_luxurious = {
	cost = -2
    opposites = {
		trait_robot_recycled
		trait_robot_flexible_designs
		trait_robot_scrapbots
	}

	allowed_archetypes = { ROBOT MACHINE }

	#assembling_modifier, declining_modifier, growing_modifier are applied to planet when pop is the one assembling/declining/growing	
	assembling_modifier = {
		planet_pop_assemblers_upkeep_mult = 0.20
	}
}

trait_robot_propaganda_machines = {
	cost = 1

	allowed_archetypes = { ROBOT }
    opposites = {
		trait_robot_historical_curator
		trait_robot_historical_revisionist
	}
	# Synth and Droid only
	species_potential_add = {
		exists = from
		from = {
			has_technology = tech_droid_workers
			NOT = { has_policy_flag = ai_outlawed }
		}
	}

	modifier = {
		planet_jobs_unity_produces_mult = 0.15
	}
}

#TODO [MAW] add army damage traits