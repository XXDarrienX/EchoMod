urban_world_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	build_time = 2000
	build_cost = {
		minerals = 5000
		influence = 100
	}
	construction_blocks_others = no

	potential = {
		has_ascension_perk = ap_voidborn
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "Can't have more than one urban world around one planet."
				NOT = { has_planet_flag = urban_world }
			}
			custom_tooltip = {
				fail_text = "Can't be a Hive World."
				NOT = { has_planet_flag = hive_world }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				nor={has_planet_flag = megastructure
                solar_system={has_star_flag=ring_world_built}}
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				can_build_megastructure_on_planet = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_orbital_station"
				has_orbital_station = no
			}
			custom_tooltip = {
				fail_text = "Can't build around habitat, asteroid, or moon."
				#has_owner = yes
				NOT = {
					OR = {
						is_planet_class = "pc_habitat"
						is_asteroid = yes
					}	
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
		} # use these for all non-star megastructures
	}
	
	ai_weight = {
		modifier = {
			weight = 0
			NOT = {
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		fromfrom.planet = {
		    change_pc = pc_city
			set_planet_flag = urban_world
			add_modifier = {
				modifier = city_planet
				days = -1
			}
		}
		remove_megastructure = fromfrom
	}
	
}
hive_world_0 = {
	entity = ""
	construction_entity = "orbital_habitat_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	build_time = 2000
	build_cost = {
		minerals = 5000
		influence = 100
	}
	construction_blocks_others = no

	potential = {
		has_ascension_perk = ap_voidborn
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "Can't have more than one hive world around one planet."
				NOT = { has_planet_flag = hive_world }
			}
			custom_tooltip = {
				fail_text = "Can't be a Urban World."
				NOT = { has_planet_flag = urban_world }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOR={has_planet_flag = megastructure
                solar_system={ has_star_flag=ring_world_built }}
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				can_build_megastructure_on_planet = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_orbital_station"
				has_orbital_station = no
			}
			custom_tooltip = {
				fail_text = "requires_survey_not_habitable"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "Can't build around habitat, asteroid, or moon."
				has_owner = yes
				NOT = {
					OR = {
						is_planet_class = "pc_habitat"
						is_asteroid = yes
					}	
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
		} # use these for all non-star megastructures
	}
	
	ai_weight = {
		modifier = {
			weight = 0
			NOT = {
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		fromfrom.planet = {
		    change_pc = pc_hive
			set_planet_flag = hive_world
			add_modifier = {
				modifier = hive_planet
				days = -1
			}
		}
		remove_megastructure = fromfrom
	}
	
}

