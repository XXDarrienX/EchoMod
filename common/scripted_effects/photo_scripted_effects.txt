generate_start_buildings_and_districts = {
	if = {
		limit = { NOT = { owner = { has_origin = origin_shattered_ring } } }
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_servitor
						has_origin = origin_syncretic_evolution
					}
				}
			}

			if = {
				limit = { owner = { last_created_species = { is_lithoid = yes } } }
				owner = {
					set_country_flag = lithoid_subspecies
				}
			}
			else_if = {
				limit = { 
					owner = { 
						last_created_species = { 
							is_plantoid = yes
						} 
					} 
				}
				owner = {
					set_country_flag = plantoid_subspecies
				}
			}
			else = {
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}
		}

		if = {
			limit = {
				owner = {
					has_origin = origin_tree_of_life
					is_lithoid_empire = yes
				}
			}
			owner = {
				set_country_flag = non_lithoid_subspecies
			}
		}

		if = {
			limit = { owner = { is_regular_empire = yes } }

			# total - 24 jobs

			# 3 jobs
			add_district = district_city

			if = {
				limit = {
					owner = { NOT = { has_valid_civic = civic_agrarian_idyll } }
				}
				add_district = district_city
				add_district = district_city
			}
			else = {
				add_district = district_farming
			}

			# 4 - 6 jobs
			if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							has_country_flag = non_lithoid_subspecies
						}
					}
				}
				add_district = district_farming
				add_district = district_farming
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district = district_farming
				}
			}
			else = {
				add_district = district_mining
				add_district = district_mining
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district = district_mining
				}
			}

			# 4 jobs
			add_district = district_mining
			add_district = district_mining

			# 2 jobs
			add_district = district_generator

			# 2 jobs
			if = {
				limit = { owner = { is_megacorp = no } }
				add_district = district_generator
				add_district = district_generator
			}

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district = district_generator
			}

			# 3 jobs
			add_building = building_capital

			# 2 jobs
			add_building = building_bureaucratic_1

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 2 jobs
			add_building = building_factory_1

			# 4 jobs
			if = {
				limit = { owner = { is_megacorp = yes } }
				add_district = district_city
				add_building = building_commercial_zone
			}
		}

		if = {
			limit = { owner = { is_hive_empire = yes } }

			# total - 34 jobs

			# 4 jobs
			add_district = district_hive
			add_district = district_hive

			# 6-9 jobs
			if = {
				limit = { owner = { is_lithoid_empire = no } }
				add_district = district_farming
				add_district = district_farming
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district = district_farming
				}
			}
			else = {
				add_district = district_mining
				add_district = district_mining
				if = {
					limit = {
						owner = { has_origin = origin_default }
					}
					add_district = district_mining
				}
			}

			# 6 jobs
			add_district = district_mining
			add_district = district_mining

			if = {
				limit = {
					owner = { has_origin = origin_tree_of_life }
				}
				remove_district = district_mining
				add_district = district_farming
			}

			# 6 jobs
			add_district = district_generator
			add_district = district_generator

			# 3 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district = district_generator
			}

			# 5 jobs
			add_building = building_hive_capital

			# 2 jobs
			add_building = building_hive_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 1 job
			add_building = building_spawning_pool

			# 1 job
			add_building = building_hive_warren

			# 1 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_building = building_hive_warren
			}
		}

		# Replace capital building for machine empires
		if = {
			limit = { owner = { is_machine_empire = yes } }

			# total - 27 jobs

			# 3 jobs
			add_district = district_nexus

			# 4 jobs
			add_district = district_mining
			add_district = district_mining

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district = district_mining
			}

			# 10 jobs
			add_district = district_generator
			add_district = district_generator
			add_district = district_generator
			add_district = district_generator
			add_district = district_generator

			# 2 jobs
			if = {
				limit = {
					owner = { has_origin = origin_default }
				}
				add_district = district_generator
			}

			# 6 jobs
			add_building = building_machine_capital

			# 1 job
			add_building = building_machine_assembly_plant

			# 2 job
			add_building = building_uplink_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			#Assimilators
			if = {
				limit = { owner = { has_civic = civic_machine_assimilator } }
				remove_district = district_generator

				if = {
					limit = { owner = { has_country_flag = lithoid_subspecies } }
					add_district = district_mining
				}
				else = {
					add_district = district_farming
				}
			}

			#Servitors
			if = {
				limit = { owner = { has_civic = civic_machine_servitor } }

				if = {
					limit = { owner = { has_country_flag = lithoid_subspecies } }
					add_district = district_mining
				}
				else = {
					add_district = district_farming
				}

				add_district = district_generator
				#remove_district = district_nexus
				#remove_district = district_nexus #blocked removals for + 2 jobs and housing
				add_building = building_organic_sanctuary
			}
			if = {
				limit = { owner = { has_origin = origin_machine } }

				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator
				remove_district = district_generator

				remove_district = district_farming

				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining
				remove_district = district_mining

				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped
				add_district = district_generator_uncapped

				add_district = district_mining_uncapped
				add_district = district_mining_uncapped

				#Assimilators
				if = {
					limit = { owner = { has_civic = civic_machine_assimilator } }
					add_deposit = d_organic_slurry
				}
			}
		}
	}
	if = {
		limit = { owner = { has_origin = origin_shattered_ring } }
		add_district = district_rw_farming
		add_deposit = d_arcane_generator
		add_deposit = d_decrepit_tunnels_1
		add_deposit = d_decrepit_tunnels_2
		add_deposit = d_decrepit_tunnels_3

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					NOT = { has_civic = civic_hive_devouring_swarm }
				}
			}
			while = {
				count = 4
				add_deposit = d_hibernating_lithoids
			}
		}

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					has_civic = civic_hive_devouring_swarm
				}
			}
			while = {
				count = 2
				add_deposit = d_hibernating_lithoids
			}
		}

		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					is_hive_empire = yes
				}
			}
			remove_district = district_rw_farming
			add_district = district_rw_generator
		}

		if = {
			limit = { owner = { is_regular_empire = yes } }

			# 3 jobs
			add_building = building_capital

			# 2 jobs
			add_building = building_bureaucratic_1

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 2 jobs
			add_building = building_factory_1

			# 5 jobs
			if = {
				limit = { owner = { is_megacorp = yes } }
				add_building = building_commercial_zone
			}
		}

		if = {
			limit = { owner = { is_hive_empire = yes } }

			# 5 jobs
			add_building = building_hive_capital

			# 2 jobs
			add_building = building_hive_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			# 1 job
			add_building = building_spawning_pool

			# 1 job
			add_building = building_hive_warren
		}

		# Replace capital building for machine empires
		if = {
			limit = { owner = { is_machine_empire = yes } }
			remove_district = district_rw_farming
			add_district = district_rw_generator

			# 6 jobs
			add_building = building_machine_capital

			# 1 job
			add_building = building_machine_assembly_plant

			# 2 job
			add_building = building_uplink_node

			# 2 jobs
			add_building = building_research_lab_1

			# 2 jobs
			add_building = building_foundry_1

			#Assimilators
			if = {
				limit = { owner = { has_civic = civic_machine_assimilator } }
				add_district = district_rw_farming
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_2
				add_deposit = d_segment_rubble_2
			}

			#Servitors
			if = {
				limit = { owner = { has_civic = civic_machine_servitor } }
				add_building = building_organic_sanctuary
				add_district = district_rw_farming
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_1
				add_deposit = d_segment_rubble_2
				add_deposit = d_segment_rubble_2
			}
		}
	}

	# Additional resources based on empire type and possible subspecies
	owner = {
		if = {
			limit = {
				has_authority = auth_machine_intelligence
			}
			if = {
				limit = {
					OR = {
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
					}
				}
				if = {
					limit = { has_country_flag = lithoid_subspecies }
					add_resource = { minerals = 100	}
					add_resource = { energy = 100 }
				}
				else_if = {
					limit = { has_country_flag = plantoid_subspecies }
					add_resource = { energy = 100	}
					add_resource = { minerals = 100 }
				}
				else = {
					add_resource = { food = 100	}
					add_resource = { energy = 100 }
				}
			}
			else = {
				add_resource = { energy = 200 }
			}
		}
		else = {
			if = {
				limit = { 
					is_lithoid_empire = no 
					is_plantoid_empire = no
				}
				if = {
					limit = { has_country_flag = lithoid_subspecies }
					add_resource = { food = 100	}
					add_resource = { minerals = 100 }
				}
				else_if = {
					limit = { has_country_flag = plantoid_subspecies }
					add_resource = { energy = 100	}
					add_resource = { minerals = 100 }
				}
				else = {
					add_resource = { food = 200 }
				}
			}
			else = {
				if = {
					limit = { has_country_flag = non_lithoid_subspecies }
					add_resource = { food = 100	}
					add_resource = { minerals = 100 }
				}
				else = {
					add_resource = { minerals = 200 }
				}
			}
		}
	}
}

generate_start_pops = {
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_evolution
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
				}
			}
		}

		if = { limit = { last_created_species = { is_species_class = MACHINE } }
			modify_species = {
				species = last_created_species
				add_trait = trait_machine_unit
				add_traits_at_start_of_list = yes
			}
			last_created_species = { save_event_target_as = last_created_species }
		}

		if = {
			limit = { owner = { has_origin = origin_syncretic_evolution } }

			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				set_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
			while = {
				count = 12
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_organic_trophy
				}
			}
			while = {
				count = 5
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}

		if = {
			limit = { owner = { has_valid_civic = civic_machine_assimilator } }
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_full_machine
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_hive_mind
				}
			}
			while = {
				count = 10
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}
	}

	if = { 
		limit = { 
			owner = { 
				species = { has_trait = trait_carnivorous_plant }
				is_gestalt = yes
			}
		}
		random_list = {
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = ART #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
						trait = trait_hive_mind
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = REP #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
						# trait = trait_hive_mind
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = MOL #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
						# trait = trait_hive_mind
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = FUN #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
						# trait = trait_hive_mind
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
		}
		while = {
			count = 6
			create_pop = {
				species = last_created_species
				ethos = random
			}
			last_created_pop = {
				clear_ethos = yes
			}
		}
	}

	if = { 
		limit = { 
			owner = { 
				species = { has_trait = trait_carnivorous_plant }
				is_gestalt = no
			}
		}
		random_list = {
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = ART #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = REP #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = MOL #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
			1 ={
				create_species = {
					name = Livestock
					plural = Livestock
					class = FUN #random_non_machine
					portrait = random
					homeworld = root
					traits = { 
						trait = trait_livestock 
					}
					sapient = yes
					is_mod = no
					immortal = no
				}
			}
		}
		last_created_species = {
			set_citizenship_type = {
				country = root.owner
				type = citizenship_slavery
			}
			set_slavery_type = {
				country = root.owner
				type = slavery_livestock
			}
			set_living_standard = {
				country = root.owner
				type = living_standard_subsistence
			}
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
				ethos = random
			}
			last_created_pop = {
				clear_ethos = yes
			}
		}
	}

	if = {
		limit = { owner = { has_origin = origin_mechanists } }
		owner = { create_built_robot_species = yes }
		while = {
			count = 8
			create_pop = {
				species = last_created_species
			}
		}

		add_building = building_robot_assembly_plant
		add_district = district_generator
		while = {
			limit = { num_pops < 27 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_hive_empire = yes } }
		while = {
			limit = { num_pops < 34 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_machine_empire = yes } }
		while = {
			limit = { num_pops < 29 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_megacorp = yes} }
		while = {
			limit = { num_pops < 30 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_regular_empire = yes } }
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_regular_empire = yes }
		}
		while = {
			limit = { num_pops < 32 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_machine_empire = yes }
		}
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_hive_empire = yes }
		}
		while = {
			limit = { num_pops < 35 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { is_megacorp = yes }
		}
		while = {
			limit = { num_pops < 34 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { has_valid_civic = civic_machine_servitor }
		}
		while = {
			limit = { num_pops < 37 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
			owner = { has_valid_civic = civic_machine_assimilator }
		}
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
}