#Advancing primitive eras on timer countdown - country scope
mem_crucible_advance_ages = {
    switch = {
        trigger = has_country_flag
        stone_age = {
            remove_country_flag = stone_age
            set_country_flag = bronze_age
            set_primitive_age = bronze_age
            capital_scope = {
                every_tile = {
                    limit = { has_pop = yes }
                    set_building = building_primitive_farm
                }
                create_army = {
                    name = "NAME_Primitive_Army"
                    owner = prev
                    species = prev
                    type = "primitive_army"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.31
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        bronze_age = {
            remove_country_flag = bronze_age
            change_government = {
                civics = {
                    civic = civic_landed_nobility
                    civic = civic_flat_world_theory
                }
            }
            set_country_flag = iron_age
            set_primitive_age = iron_age
            capital_scope = {
                create_army = {
                    name = "NAME_Primitive_Army"
                    owner = prev
                    species = prev
                    type = "primitive_army"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.21
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        iron_age = {
            remove_country_flag = iron_age
            set_country_flag = late_medieval_age
            set_primitive_age = late_medieval_age
            capital_scope = {
                create_army = {
                    name = "NAME_Primitive_Army"
                    owner = prev
                    species = prev
                    type = "primitive_army"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.23
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        late_medieval_age = {
            remove_country_flag = late_medieval_age
            set_country_flag = renaissance_age
            set_primitive_age = renaissance_age
            capital_scope = {
                create_army = {
                    name = "NAME_Primitive_Army"
                    owner = prev
                    species = prev
                    type = "primitive_army"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.25
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        renaissance_age = {
            remove_country_flag = renaissance_age
            set_country_flag = steam_age
            set_primitive_age = steam_age
            capital_scope = {
                remove_all_armies = yes
                while = {
                    count = 3
                    create_army = {
                        name = "NAME_Industrial_Army"
                        owner = prev
                        species = prev
                        type = "industrial_army"
                    }
                }
                random_tile = {
                    limit = {
                        has_grown_pop = yes
                    }
                    clear_deposits = yes
                    add_deposit = d_mineral_deposit
                    set_building = "building_primitive_factory"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.27
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        steam_age = {
            remove_country_flag = steam_age
            change_government = {
                civics = {
                    civic = civic_increasing_urbanization
                    civic = civic_atmospheric_pollution
                }
            }
            set_country_flag = industrial_age
            set_primitive_age = industrial_age
            set_graphical_culture = industrial_01
            capital_scope = {
                create_army = {
                    name = "NAME_Industrial_Army"
                    owner = prev
                    species = prev
                    type = "industrial_army"
                }
                random_tile = {
                    limit = {
                        has_grown_pop = yes
                        has_building = building_primitive_farm
                    }
                    clear_deposits = yes
                    add_deposit = d_mineral_deposit
                    set_building = "building_primitive_factory"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.29
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        industrial_age = {            
            remove_country_flag = industrial_age
            set_country_flag = machine_age
            set_primitive_age = machine_age
            capital_scope = {
                create_army = {
                    name = "NAME_Industrial_Army"
                    owner = prev
                    species = prev
                    type = "industrial_army"
                }
                random_tile = {
                    limit = {
                        has_grown_pop = yes
                        has_building = building_primitive_farm
                    }
                    clear_deposits = yes
                    add_deposit = d_mineral_deposit
                    set_building = "building_primitive_factory"
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = primitive.11
                            scopes = {
                                from = prevprev
                            }
                        }
                    }
                }
            }
        }
        machine_age = {
            remove_country_flag = machine_age
            set_country_flag = mem_crucible_insanity_age
            set_primitive_age = mem_crucible_insanity_age
            capital_scope = {
                while = {
                    count = 3
                    random_tile = {
                        limit = { has_pop = yes }
                        set_ruined = yes
                    }
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        country_event = { 
                            id = mem_crucible.3
                        }
                    }
                }
            }
        }
        mem_crucible_insanity_age = {
            capital_scope = {
                every_tile = {
                    kill_pop = yes
                    remove_building = yes
                }
                IF = {
                    limit = { has_observation_outpost = yes observation_outpost_owner = { NOT = { has_country_flag = mem_crucible_ignore_events } } }
                    observation_outpost_owner = {
                        change_variable = {
                            which = mem_crucible_witnessed_death
                            value = 1
                        }
                        country_event = { id = mem_crucible.4 }
                    }
                }
                IF = {
                    limit = { has_observation_outpost = yes }
                    observation_outpost = {
                        dismantle = yes
                    }
                }
                change_pc = pc_shrouded
            }
            set_country_type = mem_crucible_dummy_country
        }
    }
}