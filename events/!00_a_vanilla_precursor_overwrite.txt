

namespace = precursor

### The Vultaum Star Assembly

# Vultaum Home System Discovered
country_event = {
	id = precursor.100
	title = "precursor.100.name"
	desc = "precursor.100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:vultaumar
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = vultaumar }
			save_event_target_as = vultaumar
			random_system_planet = {
				limit = { has_planet_flag = vultaum_homeworld }
				# Start -guilli
				# broken planet thus we give it a guaranteed shipyards and a deposit bonus
				if = {
					limit = {
						AND = {
							has_global_flag = "has_real_space_mod"
							NOT = { has_global_flag = "has_real_space_mc_mod" }
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_01_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_02_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
					while = {
						count = 15
						create_ambient_object = {
							type = "small_debris_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
				}
				if = {
					limit = {
						NOT = { has_global_flag = "has_real_space_mod" }
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_01_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_02_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
					while = {
						count = 15
						create_ambient_object = {
							type = "small_debris_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
				}
				random_moon = {
					gpm_spawn_precursor_tomb_world_convert_moon = yes
					if = {
						limit = {
							NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
						}
						add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
						solar_system = {
							set_star_flag = gpm_precursor_shipyards_star
						}
						gpm_set_shipyards_objects = yes
						set_planet_flag = "gpm_is_precursor_world"
					}
				}
			}
			random_system_planet = {
				limit = { is_planet_class = pc_toxic }
				gpm_spawn_precursor_tomb_world_convert_big = yes
			}
			random_system_planet = {
				limit = { is_planet_class = pc_toxic }
				gpm_spawn_precursor_tomb_world_convert_big = yes
			}	
			
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = no }
				add_deposit = d_living_metal_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = yes }
				add_deposit = d_exotic_gases_5
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = no }
				add_deposit = gpm_arcane_technology_deposit
			}

			# End -guilli
		}
		observer_event = { id = observer.56 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "vultaum_chain"
		begin_event_chain = {
			event_chain = "vultaum_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = vultaum.1
			name = "vultaum_1_poi"
			desc = "vultaum_1_poi_desc"
			event_chain = vultaum_homeworld_chain
			location = event_target:vultaumar
		}
	}
}


### The Yuht Empire

# Yuht Home System Discovered 
country_event = {
	id = precursor.600
	title = "precursor.600.name"
	desc = "precursor.600.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:yuhtaan
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = yuhtaan }
			save_event_target_as = yuhtaan
			random_system_planet = {
				limit = { has_planet_flag = yuht_homeworld }
				# Start -guilli
				# broken planet thus we give it a guaranteed shipyards and a deposit bonus
				if = {
					limit = {
						AND = {
							has_global_flag = "has_real_space_mod"
							NOT = { has_global_flag = "has_real_space_mc_mod" }
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_01_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_02_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
					while = {
						count = 15
						create_ambient_object = {
							type = "small_debris_object"
							entity_offset_height = { min = -3 max = -13 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 10
								angle = random
							}
						}
					}
				}
				if = {
					limit = {
						NOT = { has_global_flag = "has_real_space_mod" }
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_01_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
					while = {
						count = 5
						create_ambient_object = {
							type = "medium_debris_02_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
					while = {
						count = 15
						create_ambient_object = {
							type = "small_debris_object"
							entity_offset_height = { min = -10 max = -20 }
							location = this
						}
						last_created_ambient_object = {
							set_location = {
								target = prev
								distance = 15
								angle = random
							}
						}
					}
				}
				random_moon = {
					gpm_spawn_precursor_tomb_world_convert_city = yes
				}
			}
			# random_system_planet = {
			# 	limit = { is_planet_class = pc_barren is_moon = no }
			# 	gpm_spawn_precursor_tomb_world_convert_big = yes
				
			# }			
			
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = no }
				add_deposit = d_living_metal_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = yes }
				remove_deposit = yes
				add_deposit = d_exotic_gases_5
			}
			random_system_planet = {
				limit = { gpm_is_planet_gas_giant = yes }
				random_moon = {
					gpm_spawn_precursor_tomb_world_convert_moon = yes
				}
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = no }
				add_deposit = gpm_arcane_technology_deposit
			}

			# End -guilli
		}
		observer_event = { id = observer.57 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "yuht_chain"
		begin_event_chain = {
			event_chain = "yuht_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = yuht.1
			name = "yuht_1_poi"
			desc = "yuht_1_poi_desc"
			event_chain = yuht_homeworld_chain
			location = event_target:yuhtaan
		}
	}
}

### The First League

# First League Home System Discovered
country_event = {
	id = precursor.1100
	title = "precursor.1100.name"
	desc = "precursor.1100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:fen_habbanis
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = fen_habbanis }
			save_event_target_as = fen_habbanis
			# Start -guilli
			random_system_planet = {
				limit = { has_planet_flag = first_league_homeworld }
				set_planet_flag = "gpm_is_precursor_world"
				# ecumopolis world.
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
					add_modifier = { days = -1 modifier = "Precursor_Capital_Complex" }
				}
				gpm_set_shipyards_objects = yes
				remove_deposit = d_society_10
				remove_deposit = d_physics_10
				remove_deposit = d_engineering_10
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = no }
				add_deposit = gpm_arcane_technology_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_toxic }
				add_deposit = d_society_10
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_molten }
				add_deposit = d_physics_10
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_molten }
				add_deposit = d_engineering_10
			}
			# End -guilli
		}
		observer_event = { id = observer.58 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "first_league_chain"
		begin_event_chain = {
			event_chain = "first_league_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = first_league.1
			name = "first_league_1_poi"
			desc = "first_league_1_poi_desc"
			event_chain = first_league_homeworld_chain
			location = event_target:fen_habbanis
		}
	}
}



### The Irassian Concordat

# Irassian Home System Discovered
country_event = {
	id = precursor.1600
	title = "precursor.1600.name"
	desc = "precursor.1600.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:irass
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = irass }
			save_event_target_as = irass
			# Start -guilli
			random_system_planet = {
				limit = { has_planet_flag = irassian_homeworld }
				set_planet_flag = "gpm_is_precursor_world"
				# normal planet thus we give it a guaranteed shipyards and two random precursor modifiers.
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
					add_modifier = { days = -1 modifier = "Precursor_Capital_Complex" }
					random_list = {
						10 = { add_modifier = { days = -1 modifier = "Precursor_Planetary_Gun" } }
						10 = { add_modifier = { days = -1 modifier = "Precursor_Bunker_Grid" } }
						10 = { add_modifier = { days = -1 modifier = "Precursor_Mechs" } }
						10 = { add_modifier = { days = -1 modifier = "Precursor_Eternal_Fortress" } }
					}
				}
				gpm_set_shipyards_objects = yes
				add_modifier = { modifier = terraforming_candidate_precursor days = -1 }
			}
			random_system_planet = {
				limit = { has_deposit = no OR = { gpm_is_planet_gas_giant = no is_asteroid = no } }
				add_deposit = d_living_metal_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_gas_giant = yes }
				add_deposit = d_exotic_gases_5
			}
			every_system_planet = {
				limit = { is_planet_class = pc_frozen }
				gpm_spawn_precursor_tomb_world_convert_moon = yes
			}
			random_system_planet = {
				limit = { has_deposit = no OR = { gpm_is_planet_gas_giant = no gpm_is_planet_asteroid = no } }
				add_deposit = gpm_arcane_technology_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_asteroid = yes }
				add_deposit = d_rare_crystals_5
			}
			random_system_planet = {
				limit = { has_deposit = no gpm_is_planet_molten = yes }
				add_deposit = d_alloys_5
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_barren }
				gpm_spawn_precursor_tomb_world_convert_big = yes
			}
			# End -guilli
		}
		observer_event = { id = observer.59 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "irassian_chain"
		begin_event_chain = {
			event_chain = "irassian_homeworld_chain"
			target = ROOT
		}
		hidden_effect = {
			create_point_of_interest = {
				id = irassian.1
				name = "irassian_1_poi"
				desc = "irassian_1_poi_desc"
				event_chain = irassian_homeworld_chain
				location = event_target:irass
			}
		}
	}
}

### Cybrex

# Cybrex Home System Discovered
country_event = {
	id = precursor.2100
	title = "precursor.2100.name"
	desc = "precursor.2100.desc"
	picture = GFX_evt_federation_fleet
	location = event_target:cybrex
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = { has_star_flag = cybrex }
			save_event_target_as = cybrex
			# Start -guilli
			random_system_planet = {
				limit = { is_star = yes }
				save_event_target_as = gpm_cybrex_shipyards
				add_modifier = { modifier = Singing_Star days = -1 }
				add_modifier = { modifier = Precursor_Star_Filter days = -1 }
				clear_deposits = yes
				# add_deposit = gpm_arcane_technology_deposit
				# add_deposit = gpm_arcane_technology_deposit
				# add_deposit = gpm_arcane_technology_deposit
				#add_deposit = gpm_trade_deposit
				if = {
					limit = {
						NOT = { has_global_flag = gpm_modifiers_precursor_disabled }
					}
					add_modifier = { days = -1 modifier = "Precursor_Shipyards" }
					solar_system = {
						set_star_flag = gpm_precursor_shipyards_star
					}
					
					if = { 
						limit = { 
							AND = {
								has_global_flag = "has_real_space_mod"
								NOT = { has_global_flag = "has_real_space_mc_mod" }
							}
						}
						create_ambient_object = {
							type = gpm_precursor_shipyards_star_rs
							location = this
						}
					}
					if = {
						limit = { NOT = { has_global_flag = has_real_space_mod } }
						create_ambient_object = {
							type = gpm_precursor_shipyards_star
							location = this
						}
					}
					
					last_created_ambient_object = {
						set_location = {
							target = event_target:gpm_cybrex_shipyards
						}
						set_ambient_object_flag = gpm_precursor_shipyard_flag
					}
					
					set_planet_flag = "gpm_is_precursor_world"
				}
			}
			# End -guilli
		}
		hidden_effect = {
			random_country = {
				limit = {
					is_ai = yes
				}
				country_event = { id = precursor.99999 }
			}
		}
		observer_event = { id = observer.60 }
	}
	
	option = {
		name = "precursor.100.a"
		end_event_chain = "cybrex_chain"
		begin_event_chain = {
			event_chain = "cybrex_homeworld_chain"
			target = ROOT
		}
		create_point_of_interest = {
			id = cybrex.1
			name = "cybrex_1_poi"
			desc = "cybrex_1_poi_desc"
			event_chain = cybrex_homeworld_chain
			location = event_target:cybrex
		}
	}
}

country_event = {
	id = precursor.99999
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = { has_star_flag = cybrex }
			gpm_cybrex_ringworld_switch = yes
			gpm_cybrex_ringworld_switch = yes
			gpm_cybrex_ringworld_switch = yes
			gpm_cybrex_ringworld_switch = yes

			random_system_planet = {
				limit = { 
					is_planet_class = pc_ringworld_habitable
					NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				}
				add_modifier = { days = -1 modifier = Precursor_Capital_Complex }
				set_planet_flag = gpm_cybrex_habitable_set
				set_planet_flag = gpm_cybrex_habitable_1
				set_name = "Cybrex Alpha"
			}
			random_system_planet = {
				limit = { 
					is_planet_class = pc_ringworld_habitable
					NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				}
				add_modifier = { days = -1 modifier = Precursor_Communication_Hub }
				set_planet_flag = gpm_cybrex_habitable_set
				set_planet_flag = gpm_cybrex_habitable_2
				set_name = "Cybrex Beta"
			}
			random_system_planet = {
				limit = { 
					is_planet_class = pc_ringworld_habitable
					NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				}
				add_modifier = { days = -1 modifier = Precursor_Singularity_Drive }
				set_planet_flag = gpm_cybrex_habitable_set
				set_planet_flag = gpm_cybrex_habitable_3
				set_name = "Cybrex Omega"
			}
			random_system_planet = {
				limit = { 
					is_planet_class = pc_ringworld_habitable
					NOT = { has_planet_flag = gpm_cybrex_habitable_set }
				}
				add_modifier = { days = -1 modifier = Precursor_Mechs }
				set_planet_flag = gpm_cybrex_habitable_set
				set_planet_flag = gpm_cybrex_habitable_4
				set_name = "Cybrex Gamma"
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = gpm_arcane_technology_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = gpm_arcane_technology_deposit
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_engineering_5
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_physics_5
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_society_5
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_alloys_3
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_alloys_3
			}
			random_system_planet = {
				limit = { has_deposit = no is_planet_class = pc_ringworld_seam }
				add_deposit = d_living_metal_deposit
			}
			random_system_planet = {
				limit = { is_star = yes }
				add_deposit = d_energy_5
			}
		}
	}
}


###### Overwriting precursor start events so AI can get them too #######

# Vultaum Introduction
ship_event = {
	id = precursor.1
	title = "precursor.1.name"
	desc = "precursor.1.desc"
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		# owner = { is_ai = no }	# -guilli
		solar_system = { has_star_flag = precursor_1 }
		solar_system = { NOT = { is_same_value = root.owner.capital_scope.solar_system } }
		FROM = { 
			has_anomaly = no 
			is_star = no
		}
		owner = {
			NOR = { 
				has_country_flag = vultaum_intro
				has_country_flag = yuht_intro
				has_country_flag = first_league_intro
				has_country_flag = irassian_intro
				has_country_flag = cybrex_intro
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = vultaum_intro }
	}
	
	option = {
		name = INTERESTING
		hidden_effect = { owner = { country_event = { id = story.5 days = 30 } } }
		owner = {
			begin_event_chain = {
				event_chain = "vultaum_chain"
				target = THIS
			}
		}
	}
}
# Vultaum Homeworld
ship_event = {
	id = precursor.101
	title = "precursor.101.name"
	desc = "precursor.101.desc"
	picture = GFX_evt_archaeological_dig
	location = from
	
	is_triggered_only = yes

	trigger = {
		from = { has_planet_flag = vultaum_homeworld }
		owner = { 
			# owner = { is_ai = no }	# -guilli
			has_country_flag = vultaum_system
		}
	}

	immediate = {
		owner = {
			set_country_flag = vultaum_world_found
			set_global_flag = vultaum_homeworld_found
			if = {
				limit = { has_event_chain = vultaum_chain }
				end_event_chain = "vultaum_chain"
			}
			if = {
				limit = { has_event_chain = "vultaum_homeworld_chain" }
				end_event_chain = "vultaum_homeworld_chain"
			}
		}
		every_country = {
			limit = { has_event_chain = "vultaum_chain" }
			end_event_chain = "vultaum_chain"
		}
	}
	
	option = {
		name = "FASCINATING"
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 120
				min = 240
				max = 9999
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
			add_monthly_resource_mult = {
				resource = engineering_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

# Someone else got there first
ship_event = {
	id = precursor.102
	title = "precursor.102.name"
	
	desc = {
		text = precursor.102.desc.a
		trigger = {
			owner = {
				OR = { 
					has_event_chain = vultaum_chain
					has_event_chain = vultaum_homeworld_chain
				}
			}
		}
	}
	desc = {
		text = precursor.102.desc.b
		trigger = {
			owner = {
				NOR = {
					has_event_chain = vultaum_chain
					has_event_chain = vultaum_homeworld_chain
				}
			}
		}
	}
	
	location = from
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_planet_flag = vultaum_homeworld }
		owner = { 
			# owner = { is_ai = no }	# -guilli
			NOT = { has_country_flag = vultaum_system }
		}
		has_global_flag = vultaum_homeworld_found
	}
	
	immediate = {
		owner = {
			set_country_flag = vultaum_world_found
			if = {
				limit = { has_event_chain = vultaum_chain }
				end_event_chain = "vultaum_chain"
			}
			if = {
				limit = { has_event_chain = vultaum_homeworld_chain }
				end_event_chain = "vultaum_homeworld_chain"
			}
		}
	}		
	
	option = {
		name = "UNFORTUNATE"
	}
}

# Yuht Intro
ship_event = {
	id = precursor.500
	title = "precursor.500.name"
	desc = "precursor.500.desc"
	picture = GFX_evt_archaeological_dig
	location = from
	
	is_triggered_only = yes 
	
	trigger = {
		solar_system = { has_star_flag = precursor_2 }
		solar_system = { NOT = { is_same_value = root.owner.capital_scope.solar_system } }
		# owner = { is_ai = no }
		FROM = { 
			has_anomaly = no 
			is_star = no
		}
		owner = { 
			NOR = { 
				has_country_flag = vultaum_intro
				has_country_flag = yuht_intro
				has_country_flag = first_league_intro
				has_country_flag = irassian_intro
				has_country_flag = cybrex_intro
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = yuht_intro }
	}
	
	option = {
		name = INTERESTING
		hidden_effect = { owner = { country_event = { id = story.5 days = 30 } } }
		owner = {
			begin_event_chain = {
				event_chain = "yuht_chain"
				target = THIS
			}
		}
	}
}
# Yuht Homeworld
ship_event = {
	id = precursor.601
	title = "precursor.601.name"
	desc = "precursor.601.desc"
	picture = GFX_evt_archaeological_dig
	location = from
	
	is_triggered_only = yes

	trigger = {
		from = { has_planet_flag = yuht_homeworld }
		owner = { 
			# is_ai = no 
			has_country_flag = yuht_system
		}
	}
	
	immediate = {
		set_global_flag = yuht_homeworld_found
		owner = {
			set_country_flag = yuht_world_found
			end_event_chain = "yuht_homeworld_chain"
		}
		every_country = {
			limit = { has_event_chain = "yuht_chain" }
			end_event_chain = "yuht_chain"
		}
	}
	
	option = {
		name = "FASCINATING"
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 120
				min = 240
				max = 9999
			}
			add_monthly_resource_mult = {
				resource = energy
				value = @tier4materialreward
				min = @tier4materialmin
				max = @tier4materialmax
			}
			add_monthly_resource_mult = {
				resource = minerals
				value = @tier4materialreward
				min = @tier4materialmin
				max = @tier4materialmax
			}
		}
	}
}

# Someone else got there first
ship_event = {
	id = precursor.602
	title = "precursor.602.name"
	
	desc = {
		text = precursor.602.desc.a
		trigger = {
			owner = {
				OR = { 
					has_event_chain = yuht_chain
					has_event_chain = yuht_homeworld_chain
				}
			}
		}
	}
	desc = {
		text = precursor.602.desc.b
		trigger = {
			owner = {
				NOR = {
					has_event_chain = yuht_chain
					has_event_chain = yuht_homeworld_chain
				}
			}
		}
	}
	
	location = from
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_planet_flag = yuht_homeworld }
		owner = { 
			# is_ai = no 
			NOT = { has_country_flag = yuht_system }
		}
		has_global_flag = yuht_homeworld_found
	}
	
	immediate = {
		owner = {
			set_country_flag = yuht_world_found
			if = {
				limit = { has_event_chain = yuht_chain }
				end_event_chain = "yuht_chain"
			}
			if = {
				limit = { has_event_chain = yuht_homeworld_chain }
				end_event_chain = "yuht_homeworld_chain"
			}
		}
	}		
	
	option = {
		name = "UNFORTUNATE"
	}
}
# First League Notification Event
ship_event = {
	id = precursor.1000
	title = "precursor.1000.name"
	desc = "precursor.1000.desc"
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes 
	
	trigger = {
		solar_system = { has_star_flag = precursor_3 }
		solar_system = { NOT = { is_same_value = root.owner.capital_scope.solar_system } }
		# owner = { is_ai = no }
		FROM = {
			has_anomaly = no 
			is_star = no
		}
		owner = { 
			NOR = { 
				has_country_flag = vultaum_intro
				has_country_flag = yuht_intro
				has_country_flag = first_league_intro
				has_country_flag = irassian_intro
				has_country_flag = cybrex_intro
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = first_league_intro }
	}
	
	option = {
		name = INTERESTING
		hidden_effect = { owner = { country_event = { id = story.5 days = 30 } } }
		owner = {
			begin_event_chain = {
				event_chain = "first_league_chain"
				target = THIS
			}
		}
	}
}
# First League Homeworld
ship_event = {
	id = precursor.1101
	title = "precursor.1101.name"
	desc = "precursor.1101.desc"
	picture = GFX_evt_dead_city
	location = from
	
	is_triggered_only = yes

	trigger = {
		from = { has_planet_flag = first_league_homeworld }
		owner = { 
			# is_ai = no 
			has_country_flag = first_league_system
		}
	}

	immediate = {
		owner = {
			set_country_flag = league_world_found
			set_global_flag = first_league_homeworld_found
		}
		every_country = {
			limit = { has_event_chain = "first_league_chain" }
			end_event_chain = "first_league_chain"
		}
	}

	after = {
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 120
				min = 240
				max = 9999
			}
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
			add_monthly_resource_mult = {
				resource = influence
				value = @tier4influencereward
				min = @tier4influencemin
				max = @tier4influencemax
			}
		}
	}
	
	option = {
		name = "FASCINATING"
		trigger = {
			owner = {
				has_event_chain = "first_league_homeworld_chain"
			}
		}
		owner = {
			end_event_chain = "first_league_homeworld_chain"
		}
	}

	option = {
		name = "FASCINATING"
		trigger = {
			owner = {
				NOT = {
					has_event_chain = "first_league_homeworld_chain"
				}
			}
		}
	}
}

# Someone else got there first
ship_event = {
	id = precursor.1102
	title = "precursor.1102.name"
	
	desc = {
		text = precursor.1102.desc.a
		trigger = {
			owner = {
				OR = { 
					has_event_chain = first_league_chain
					has_event_chain = first_league_homeworld_chain
				}
			}
		}
	}
	desc = {
		text = precursor.1102.desc.b
		trigger = {
			owner = {
				NOR = {
					has_event_chain = first_league_chain
					has_event_chain = first_league_homeworld_chain
				}
			}
		}
	}
	
	location = from
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_planet_flag = first_league_homeworld }
		owner = { 
			# is_ai = no
			NOT = { has_country_flag = first_league_system }
		}
		has_global_flag = first_league_homeworld_found
	}
	
	immediate = {
		owner = {
			set_country_flag = league_world_found
			if = { 
				limit = { has_event_chain = first_league_chain }
				end_event_chain = "first_league_chain"
			}
			if = {
				limit = { has_event_chain = first_league_homeworld_chain }
				end_event_chain = "first_league_homeworld_chain"
			}
		}
	}		
	
	option = {
		name = "UNFORTUNATE"
	}
}

# Irassian Notification Event
ship_event = {
	id = precursor.1500
	title = "precursor.1500.name"
	desc = "precursor.1500.desc"
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = { has_star_flag = precursor_4 }
		solar_system = { NOT = { is_same_value = root.owner.capital_scope.solar_system } }
		# owner = { is_ai = no }
		FROM = { 
			has_anomaly = no 
			is_star = no
		}
		owner = {
			NOR = { 
				has_country_flag = vultaum_intro
				has_country_flag = yuht_intro
				has_country_flag = first_league_intro
				has_country_flag = irassian_intro
				has_country_flag = cybrex_intro
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = irassian_intro }
	}
	
	option = {
		name = INTERESTING
		hidden_effect = { owner = { country_event = { id = story.5 days = 30 } } }
		owner = {
			begin_event_chain = {
				event_chain = "irassian_chain"
				target = ROOT
			}
		}
	}
}
# Irassian Homeworld
ship_event = {
	id = precursor.1601
	title = "precursor.1601.name"
	desc = "precursor.1601.desc"
	picture = GFX_evt_dead_city
	location = from
	
	is_triggered_only = yes

	trigger = {
		from = { has_planet_flag = irassian_homeworld }
		owner = { 
			# is_ai = no 
			has_country_flag = irassian_system
		}
	}

	immediate = {
		owner = {
			set_country_flag = irassian_world_found
			set_global_flag = irassian_homeworld_found
			if = {
				limit = { has_event_chain = irassian_chain }
				end_event_chain = "irassian_chain"
			}
			if = {
				limit = { has_event_chain = irassian_homeworld_chain }
				end_event_chain = irassian_homeworld_chain
			}
		}
		every_country = {
			limit = { has_event_chain = "irassian_chain" }
			end_event_chain = "irassian_chain"
		}
	}
	
	option = {
		name = "FASCINATING"
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 120
				min = 240
				max = 9999
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
			add_monthly_resource_mult = {
				resource = minerals
				value = @tier4materialreward
				min = @tier4materialmin
				max = @tier4materialmax
			}
		}
	}
}

# Someone else got there first
ship_event = {
	id = precursor.1602
	title = "precursor.1602.name"
	
	desc = {
		text = precursor.1602.desc.a
		trigger = {
			owner = {
				OR = { 
					has_event_chain = irassian_chain
					has_event_chain = irassian_homeworld_chain
				}
			}
		}
	}
	desc = {
		text = precursor.1602.desc.b
		trigger = {
			owner = {
				NOR = {
					has_event_chain = irassian_chain
					has_event_chain = irassian_homeworld_chain
				}
			}
		}
	}
	
	location = from
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		from = { has_planet_flag = irassian_homeworld }
		owner = { 
			# is_ai = no 
			NOT = { has_country_flag = irassian_system }
		}
		has_global_flag = irassian_homeworld_found
	}
	
	immediate = {
		owner = {
			set_country_flag = irassian_world_found
			if = {
				limit = { has_event_chain = irassian_chain }
				end_event_chain = "irassian_chain"
			}
			if = {
				limit = { has_event_chain = irassian_homeworld_chain }
				end_event_chain = "irassian_homeworld_chain"
			}
		}
	}		
	
	option = {
		name = "UNFORTUNATE"
	}
}

# Cybrex Notification Event
ship_event = {
	id = precursor.2000
	title = "precursor.2000.name"
	desc = "precursor.2000.desc"
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = { has_star_flag = precursor_5 }
		solar_system = { NOT = { is_same_value = root.owner.capital_scope.solar_system } }
		# owner = { is_ai = no }
		FROM = { 
			has_anomaly = no 
			is_star = no
		}
		owner = {
			NOR = { 
				has_country_flag = vultaum_intro
				has_country_flag = yuht_intro
				has_country_flag = first_league_intro
				has_country_flag = irassian_intro
				has_country_flag = cybrex_intro
			}
		}
	}
	
	immediate = {
		owner = { set_country_flag = cybrex_intro }
	}
	
	option = {
		name = INTERESTING
		hidden_effect = { owner = { country_event = { id = story.5 days = 30 } } }
		owner = {
			begin_event_chain = {
				event_chain = "cybrex_chain"
				target = ROOT
			}
		}
	}
}

# Someone else got there first
ship_event = {
	id = precursor.2102
	title = "precursor.2102.name"
	
	desc = {
		text = precursor.2102.desc.a
		trigger = {
			owner = {
				OR = { 
					has_event_chain = cybrex_chain
					has_event_chain = cybrex_homeworld_chain
				}
			}
		}
	}
	desc = {
		text = precursor.2102.desc.b
		trigger = {
			owner = {
				NOR = {
					has_event_chain = cybrex_chain
					has_event_chain = cybrex_homeworld_chain
				}
			}
		}
	}
	
	location = from
	picture = GFX_evt_archaeological_dig
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			# is_ai = no
			NOR = { 
				has_country_flag = cybrex_system 
				has_country_flag = cybrex_world_found
			}
		}
		FROM = { has_star_flag = cybrex }
	}
	
	immediate = {
		owner = {
			set_country_flag = cybrex_world_found
			if = {
				limit = { has_event_chain = cybrex_chain }
				end_event_chain = "cybrex_chain"
			}
			if = {
				limit = { has_event_chain = cybrex_homeworld_chain }
				end_event_chain = "cybrex_homeworld_chain"
			}
		}
		every_country = {
			limit = { has_event_chain = "cybrex_chain" }
			end_event_chain = "cybrex_chain"
		}
	}		
	
	option = {
		name = "UNFORTUNATE"
	}
}

# New Precursor Anomaly Found
country_event = {
	id = precursor.301
	title = "precursor.301.name"
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_authority = auth_hive_mind
			}
		}
		text = precursor.301.a.desc
	}
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_authority = auth_hive_mind
			}
		}
		text = precursor.301.b.desc
	}
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_authority = auth_hive_mind
			}
		}
		text = precursor.301.c.desc
	}
	desc = {
		trigger = {
			NOR = {
				has_authority = auth_machine_intelligence
				has_authority = auth_hive_mind
			}
		}
		text = precursor.301.d.desc
	}
	desc = {
		trigger = {
			has_authority = auth_machine_intelligence
		}
		text = precursor.301.e.desc
	}
	desc = {
		trigger = {
			has_authority = auth_hive_mind
		}
		text = precursor.301.f.desc
	}
	picture = GFX_evt_archaeological_dig
	location = event_target:precursor_planet
	trackable = yes
	
	trigger = {
		# is_ai = no
		years_passed > 50
		NOR = {
			has_country_flag = new_precursor
			has_country_flag = ongoing_precursor_artifact
		}
		OR = {
			AND = {
				has_event_chain = "vultaum_chain"
				NOT = {
					has_completed_event_chain_counter = {
						event_chain = vultaum_chain
						counter = vultaum_artifacts
					}
				}
				any_system_within_border = {
					has_star_flag = precursor_1
					any_system_planet = {
						NOT = { has_planet_flag = precursor_world }
						uninhabitable_regular_planet = yes
						has_owner = no
						has_anomaly = no
						is_surveyed = {
							who = ROOT
							status = yes
						}
					}
				}
			}
			AND = {
				has_event_chain = "yuht_chain"
				NOT = {
					has_completed_event_chain_counter = {
						event_chain = yuht_chain
						counter = yuht_artifacts
					}
				}
				any_system_within_border = {
					has_star_flag = precursor_2
					any_system_planet = {
						uninhabitable_regular_planet = yes
						NOT = { has_planet_flag = precursor_world }
						has_owner = no
						has_anomaly = no
						is_surveyed = {
							who = ROOT
							status = yes
						}
					}
				}
			}
			AND = { 
				has_event_chain = "first_league_chain"
				NOT = {
					has_completed_event_chain_counter = {
						event_chain = first_league_chain
						counter = first_league_artifacts
					}
				}
				any_system_within_border = {
					has_star_flag = precursor_3
					any_system_planet = {
						uninhabitable_regular_planet = yes
						NOT = { has_planet_flag = precursor_world }
						has_owner = no
						has_anomaly = no
						is_surveyed = {
							who = ROOT
							status = yes
						}
					}
				}
			}
			AND = {
				has_event_chain = "irassian_chain"
				NOT = {
					has_completed_event_chain_counter = {
						event_chain = irassian_chain
						counter = irassian_artifacts
					}
				}
				any_system_within_border = {
					has_star_flag = precursor_4
					any_system_planet = {
						uninhabitable_regular_planet = yes
						NOT = { has_planet_flag = precursor_world }
						has_owner = no
						has_anomaly = no
						is_surveyed = {
							who = ROOT
							status = yes
						}
					}
				}
			}
			AND = {
				has_event_chain = "cybrex_chain"
				NOT = {
					has_completed_event_chain_counter = {
						event_chain = cybrex_chain
						counter = cybrex_artifacts
					}
				}
				any_system_within_border = {
					has_star_flag = precursor_5
					any_system_planet = {
						uninhabitable_regular_planet = yes
						NOT = { has_planet_flag = precursor_world }
						has_owner = no
						has_anomaly = no
						is_surveyed = {
							who = ROOT
							status = yes
						}
					}
				}
			}
		}
	}
	
	mean_time_to_happen = {
		months = 240
		modifier = {
			factor = 0.66
			has_ethic = ethic_gestalt_consciousness # Won't get the other events
		}
		modifier = {
			factor = 0.75
			years_passed > 100
		}
	}
	
	immediate = {
		set_timed_country_flag = { flag = new_precursor days = 1200 }
		if = {
			limit = {
				has_event_chain = "vultaum_chain"
				any_system_within_border = { 
					has_star_flag = precursor_1
				}
			}
			spawn_vultaum_anomaly = yes
			break = yes
		}
		if = {
			limit = {
				has_event_chain = "yuht_chain"
				any_system_within_border = { 
					has_star_flag = precursor_2
				}
			}
			spawn_yuht_anomaly = yes
			break = yes
		}
		if = {
			limit = {
				has_event_chain = "first_league_chain"
				any_system_within_border = { 
					has_star_flag = precursor_3
				}
			}
			spawn_league_anomaly = yes
			break = yes
		}
		if = {
			limit = {
				has_event_chain = "irassian_chain"
				any_system_within_border = { 
					has_star_flag = precursor_4
				}
			}
			spawn_irassian_anomaly = yes
			break = yes
		}
		if = {
			limit = {
				has_event_chain = "cybrex_chain"
				any_system_within_border = { 
					has_star_flag = precursor_5
				}
			}
			spawn_cybrex_anomaly = yes
			break = yes
		}
	}
	
	option = {
		name = precursor.301.a
		custom_tooltip = new_precursor_project
	}
}