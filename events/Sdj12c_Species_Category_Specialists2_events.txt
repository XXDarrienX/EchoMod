namespace = SdjEvent
 
###############################################
###############################################
#####                                     #####
#####    Species Discrimination on Job    #####
#####                                     #####
#####    Menu of Job Categories           #####
#####                                     #####
###############################################
###############################################
#
# Category: specialist
#
 
country_event = {
    id = SdjEvent.1122
    title = SdjEvent.1122.name
    desc = SdjEvent.1122.desc
    picture = {
        trigger = { NOT = { is_gestalt = yes } } 
        picture = @SdjPictureRegularMenu
    }
    picture = {
        trigger = {
            is_gestalt = yes
            is_hive_empire = yes
        }
        picture = @SdjPictureHiveMenu
    }
    picture = {
        trigger = {
            is_gestalt = yes
            NOT = { is_hive_empire = yes }
        }
        picture = @SdjPictureMachineMenu
    }
    is_triggered_only = yes
    
    after = {
        hidden_effect = {
            if = {
                limit = { has_country_flag = SdjFlagSpMenu }
                remove_country_flag = SdjFlagSpMenu
                country_event = { id = SdjEvent.1013 }
            } else = { country_event = { id = SdjEvent.1122 } }
        }
    }
    
    option = {
        name = SdjTextAccept.name
        custom_tooltip = SdjTextAccept.tooltip
        hidden_effect = { set_country_flag = SdjFlagSpMenu }
    }
    option = {
        name = SdjOptionAllow_cat_specialist.name
        #custom_tooltip = SdjOptionAllow_cat_specialist.tooltip
        hidden_effect = {
            event_target:SdjTargetSpeciesA = {
                set_species_flag = SdjFlagForbiddenSeparately_@root
                set_species_flag = SdjFlagForbiddenFinely_@root
                SdjEffectUnbanSpeciesFrom_cat_specialist = yes
            }
        }
    }
    option = {
        name = SdjOptionForbid_cat_specialist.name
        #custom_tooltip = SdjOptionForbid_cat_specialist.tooltip
        hidden_effect = {
            event_target:SdjTargetSpeciesA = {
                set_species_flag = SdjFlagForbiddenSeparately_@root
                set_species_flag = SdjFlagForbiddenFinely_@root
                SdjEffectBanSpeciesFrom_cat_specialist = yes
            }
        }
    }
    option = {
        name = SdjTextSeparator.name
        custom_tooltip = SdjTextSeparator.tooltip
        allow = { hidden_trigger = { always = no } }
    }
    
    option = {
        name = SdjOptionForbid_job_colonist.name
        #custom_tooltip = SdjOptionForbid_job_colonist.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_colonist_@root } }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_colonist_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_colonist_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_colonist.name
        #custom_tooltip = SdjOptionAllow_job_colonist.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_colonist_@root }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_colonist_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_colonist_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_entertainer.name
        #custom_tooltip = SdjOptionForbid_job_entertainer.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_entertainer_@root } }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_entertainer_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_entertainer_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_entertainer.name
        #custom_tooltip = SdjOptionAllow_job_entertainer.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_entertainer_@root }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_entertainer_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_entertainer_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_manager.name
        #custom_tooltip = SdjOptionForbid_job_manager.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_manager_@root } }
                OR = {
                    is_megacorp = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_manager_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_manager_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_manager.name
        #custom_tooltip = SdjOptionAllow_job_manager.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_manager_@root }
                OR = {
                    is_megacorp = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_manager_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_manager_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_enforcer.name
        #custom_tooltip = SdjOptionForbid_job_enforcer.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_enforcer_@root } }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_enforcer_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_enforcer_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_enforcer.name
        #custom_tooltip = SdjOptionAllow_job_enforcer.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_enforcer_@root }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_enforcer_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_enforcer_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_telepath.name
        #custom_tooltip = SdjOptionForbid_job_telepath.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_telepath_@root } }
                OR = {
                    OR = { has_ascension_perk = ap_mind_over_matter is_spiritualist = yes }
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_telepath_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_telepath_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_telepath.name
        #custom_tooltip = SdjOptionAllow_job_telepath.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_telepath_@root }
                OR = {
                    OR = { has_ascension_perk = ap_mind_over_matter is_spiritualist = yes }
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_telepath_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_telepath_@root
                }
            }
        }
    }
    option = {
        name = SdjTextSeparator.name
        custom_tooltip = SdjTextSeparator.tooltip
        trigger = {
            OR = {
                always = yes
                check_variable = { which = SdjVarMenuType value > 1.5 }
            }
        }
        allow = { hidden_trigger = { always = no } }
    }
    option = {
        name = SdjOptionForbid_job_healthcare.name
        #custom_tooltip = SdjOptionForbid_job_healthcare.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_healthcare_@root } }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_healthcare_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_healthcare_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_healthcare.name
        #custom_tooltip = SdjOptionAllow_job_healthcare.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_healthcare_@root }
                OR = {
                    always = yes
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_healthcare_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_healthcare_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_roboticist.name
        #custom_tooltip = SdjOptionForbid_job_roboticist.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_roboticist_@root } }
                OR = {
                    NOT = { has_policy_flag = robots_outlawed }
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_roboticist_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_roboticist_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_roboticist.name
        #custom_tooltip = SdjOptionAllow_job_roboticist.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_roboticist_@root }
                OR = {
                    NOT = { has_policy_flag = robots_outlawed }
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_roboticist_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_roboticist_@root
                }
            }
        }
    }
    option = {
        name = SdjTextSeparator.name
        custom_tooltip = SdjTextSeparator.tooltip
        trigger = {
            OR = {
                always = yes
                check_variable = { which = SdjVarMenuType value > 1.5 }
            }
        }
        allow = { hidden_trigger = { always = no } }
    }
    option = {
        name = SdjOptionForbid_job_underground_trade_worker.name
        #custom_tooltip = SdjOptionForbid_job_underground_trade_worker.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root } }
                OR = {
                    always = no
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_underground_trade_worker.name
        #custom_tooltip = SdjOptionAllow_job_underground_trade_worker.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root }
                OR = {
                    always = no
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_underground_trade_worker_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionForbid_job_dimensional_portal_researcher.name
        #custom_tooltip = SdjOptionForbid_job_dimensional_portal_researcher.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { NOT = { has_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root } }
                OR = {
                    always = no
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    set_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root
                }
            }
        }
    }
    option = {
        name = SdjOptionAllow_job_dimensional_portal_researcher.name
        #custom_tooltip = SdjOptionAllow_job_dimensional_portal_researcher.tooltip
        trigger = {
            hidden_trigger = {
                event_target:SdjTargetSpeciesA = { has_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root }
                OR = {
                    always = no
                    check_variable = { which = SdjVarMenuType value > 1.5 }
                }
            }
        }
        hidden_effect = {
            if = {
                limit = { event_target:SdjTargetSpeciesA = { SdjTriggerSubSpeciesModifiable = yes } }
                event_target:SdjTargetSpeciesA = {
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root
                }
            } else = {
                every_owned_pop_species = {
                    limit = { is_same_species = event_target:SdjTargetSpeciesA }
                    set_species_flag = SdjFlagForbiddenSeparately_@root
                    set_species_flag = SdjFlagForbiddenFinely_@root
                    remove_species_flag = SdjFlagForbidden_job_dimensional_portal_researcher_@root
                }
            }
        }
    }
    
    #option = {
    #    name = SdjTextSeparator.name
    #    custom_tooltip = SdjTextSeparator.tooltip
    #    allow = { hidden_trigger = { always = no } }
    #}
    #option = {
    #    name = SdjTextExit.name
    #    custom_tooltip = SdjTextExit.tooltip
    #    hidden_effect = { SdjEffectExitPriorityMenu = yes }
    #}
}

