namespace = mod_neutral_grow
####
# spaceborn aliens:
#     5 year: +1 fleet to each drone system
#    10 year: +10% to all stats to all spaceborn fleets; +1 unit (cloud fleets); +1 child (for each amoeba mother in the fleet, except biggest fleet); +1 child (tyanki fleets)
#    15 year: +1 fleet to each crystal system
#    20 year: +10% to all stats to all spaceborn fleets; +30% units to all drone fleets
#    25 year: +1 unit (cloud fleets); +1 mother (amoeba fleets); +1 adult (tyanki fleets)
#    30 year: +10% to all stats to Leviaphans; +10% to all stats to all spaceborn fleets; +30% units to all crystal fleets
#    40 year: +10% to all stats to all spaceborn fleets;
#    65: 1st weaker drone attack
# 70: expand tyanki
# 75: weak small pirates attack
# 80: amoeba expand
# 85: crystal attack
# 95: cloud expansion
####
# 

event = { 
	id = mod_neutral_grow.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {	
	    if = {
		    limit = {
			    years_passed = 5
				exists = event_target:drone_country
			}		
			event_target:drone_country = {
	            # +1 drone fleet on their systems			
			    country_event = { id = mod_neutral_grow.2 }
            }
			if = {
			    limit = { is_difficulty > 1 exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = for_solo_buff_1 days = -1 }
                }
			}
			every_country = {
			    limit = {
					    is_primitive = yes
				}
				set_country_flag = primitive_detected
			}			
		}
	    else_if = {
		    limit = {
			    years_passed = 10
				is_difficulty > 1
			}	
			event_target:mod_events_caller = {	
                # buff-1 for non agressive spaceborn + for event creatures			
				country_event = { id = mod_neutral_grow.7 }	
            }
			every_country = {
			    limit = {
				    is_ai = no
					is_country_type = default
				}
				country_event = { id = mod_neutral_grow.38 }	
			}
		}	
	    else_if = {
		    limit = {
                years_passed = 15
			}
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {
				    # +1 fleet on crystal systems
				    country_event = { id = mod_neutral_grow.16 }
                }
			}
		}
	    else_if = {
		    limit = {
			    years_passed = 20
			}
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {
				    # +30% ships to each drone guarding fleet
				    country_event = { id = mod_neutral_grow.17 }
			    }
			}				
		}	
	    else_if = {
		    limit = {
			    years_passed = 25
			}
		    random_country = {
			    limit = { 
			        is_country_type = default 
				    is_ai = yes 
					OR = {
					    has_ethic = ethic_fanatic_militarist	
					    has_ethic = ethic_fanatic_xenophobe						
					}
			   }
			   # first nomad fleet appear
			   country_event = { id = nomad.1 }
            }			
			event_target:mod_events_caller = {
                # amoeba, tyanki - grow			
				country_event = { id = mod_neutral_grow.19 }	
            }
			if = {
			    limit = { is_difficulty > 3 }			
		        event_target:mod_events_caller = {					
				    country_event = { id = mod_neutral_grow.18 }	
                }
            }			
		}	
	    else_if = {
		    limit = {
			    years_passed = 30
			}	
	        every_country = { limit = { is_primitive = yes NOT = { has_modifier = mod_primitive_buff } }
			    add_modifier = { modifier = mod_primitive_buff days = -1 }
            }			
	        every_country = { limit = { 
			    is_primitive = yes 
				NOT = {has_country_flag = stone_age} 
			    NOR = {
			        has_country_flag = humans_early_space_age 
			        has_country_flag = humans_machine_age 
			        has_country_flag = humans_late_medieval_age					
				}				
			}
		        every_owned_planet = {
					create_pop = {
						species = owner_main_species
					}								
		        }
		    }			
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {
                    #crystal fleets grow with new ships				
				    country_event = { id = mod_neutral_grow.20 }
                }
			}									
		}
	    else_if = {
		    limit = {
			    years_passed = 40
			}			
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {			
			        country_event = { id = mod_neutral_grow.22 }					
                }				
            }
			event_target:mod_events_caller = {				
				country_event = { id = mod_neutral_grow.4 }	
            }			
		}	
	    else_if = {
		    limit = {
			    years_passed = 45
			}
		    random_country = {
			    limit = { 
			        is_country_type = default 
				    is_ai = yes				
					OR = {
					    has_ethic = ethic_militarist	
					    has_ethic = ethic_xenophobe	
                        has_ethic = ethic_fanatic_spiritualist
                        has_ethic = ethic_fanatic_materialist
                        has_ethic = ethic_fanatic_egalitarian						
					}
			   }
			   country_event = { id = nomad.1 }
            }	
			if = {
			    limit = { is_difficulty > 1 }			
		        event_target:mod_events_caller = {					
				    country_event = { id = mod_neutral_grow.21 }	
                }
            }						
		}		
	    else_if = {
		    limit = {
			    years_passed = 50
			}
			event_target:mod_events_caller = {					
				country_event = { id = mod_neutral_grow.24 }
				country_event = { id = mod_neutral_grow.41 }				
            }			
		}			
	    else_if = {
		    limit = {
			    years_passed = 60
			}			
	        every_country = { limit = { 
			    is_primitive = yes 
				NOT = {has_country_flag = stone_age} 
			    NOR = {
			        has_country_flag = humans_early_space_age 
			        has_country_flag = humans_machine_age 
			        has_country_flag = humans_late_medieval_age					
				}				
			}
		        every_owned_planet = {
					create_pop = {
						species = owner_main_species
					}								
		        }
		    }			
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {					
				    country_event = { id = mod_neutral_grow.25 }
                }
			}			
			if = {
			    limit = { is_difficulty > 3 }			
		        event_target:mod_events_caller = {					
				    country_event = { id = mod_neutral_grow.26 }	
                }
            }
			event_target:mod_events_caller = {				
				country_event = { id = mod_neutral_grow.4 }	
            }			
		}
	    else_if = {		
		    limit = {
			    years_passed = 65
			}
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {	
				    if = { limit = { NOT = { has_modifier = basic_debuff_1 } }
                        add_modifier = { modifier = basic_debuff_1 days = 150 }
                    }						
			        country_event = { id = mod_neutral_grow.3 }					
                }				
            }
		    random_country = {
			    limit = { 
			        is_country_type = default 
				    is_ai = yes				
					OR = {
                        has_ethic = ethic_spiritualist
                        has_ethic = ethic_materialist
                        has_ethic = ethic_egalitarian						
					}
			   }
			   country_event = { id = nomad.1 }
            }			
		}		
	    else_if = {		
		    limit = {
			    years_passed = 70
			}
			if = {
			    limit = { exists = event_target:tiyanki_country }
		        event_target:tiyanki_country = {			
			        country_event = { id = mod_neutral_grow.6 }					
                }				
            }
			else_if = {
			    limit = { exists = event_target:tiyanki_garrison_country }
		        event_target:tiyanki_garrison_country = {			
			        country_event = { id = mod_neutral_grow.6 }					
                }				
            }
			if = {
			    limit = { is_difficulty > 3 }			
		        event_target:mod_events_caller = {					
				    country_event = { id = mod_neutral_grow.23 }	
                }
            }			
		}	
	    else_if = {		
		    limit = {
			    years_passed = 75
			}
			every_country = {
			    limit = {
					OR = {
						has_country_flag = pir_count_fl 
						AND = {
						    exists = event_target:pirate_country
						    is_same_value = event_target:pirate_country
						}
					}				    
				}
                add_modifier = { modifier = basic_debuff_1 days = 150 }				
			}
		        event_target:mod_events_caller = {	
                    #pirates				
			        country_event = { id = mod_neutral_grow.37 }					
                }						
		}	
	    else_if = {		
		    limit = {
			    years_passed = 80
			}			
			event_target:mod_events_caller = {						
				country_event = { id = mod_neutral_grow.35 }
            }						
		}	
	    else_if = {		
		    limit = {
			    years_passed = 85
			}
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {	
				    if = { limit = { NOT = { has_modifier = basic_debuff_1 } }
                        add_modifier = { modifier = basic_debuff_1 days = 150 }
                    }				
			        country_event = { id = mod_neutral_grow.36 }					
                }				
            }
		    random_country = {
			    limit = { 
			        is_country_type = default 
				    is_ai = yes				
					OR = {
                        has_ethic = ethic_xenophile
                        has_ethic = ethic_pacifist
                        has_ethic = ethic_fanatic_xenophile
                        has_ethic = ethic_fanatic_pacifist					
					}
			   }
			   country_event = { id = nomad.1 }
            }			
		}	
	    else_if = {
		    limit = {
			    years_passed = 90
            }
	  if = {
            limit = { is_difficulty > 1 }
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }		
		    }
		}	
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }		
		    }
		}	
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }			
		    }
		}
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }			
		    }
		}	
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }			
		    }
		}
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:ancient_warden_country }
            event_target:ancient_warden_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }
			}
		}		
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_5 days = -1 }
                }
			}
      }				
        }			
	    else_if = {
		    limit = {
			    years_passed = 100
			}
			event_target:mod_events_caller = {
				country_event = { id = mod_neutral_grow.42 }				
            }			
		  if = { limit = { event_target:mod_events_caller = { NOT = { has_global_flag = marauder_timer_started } } }
            if = {
				limit = {
					count_country = {
						limit = { is_country_type = dormant_marauders }
						count > 2
					}							
				}
                    set_global_flag = horde_at_152			
			}	
            else_if = {
				limit = {
					count_country = {
						limit = { is_country_type = dormant_marauders }
						count > 1
					}							
				}
                    set_global_flag = horde_at_141							
			}
            else_if = {
				limit = {
					count_country = {
						limit = { is_country_type = dormant_marauders }
						count > 0
					}							
				}
                    set_global_flag = horde_at_130							
			}
          }			
            if = { limit = { is_difficulty > 3 }
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }
			}
		}		
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_6 days = -1 }
                }
			}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_5 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:ancient_warden_country }
            event_target:ancient_warden_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}			
			}		
		}
	    else_if = {		
		    limit = {
			    years_passed = 105
			}
			event_target:mod_events_caller = {	
				#pirates				
				country_event = { id = mod_neutral_grow.37 }					
			}
		    random_country = {
			    limit = { 
			        is_country_type = default 		
			    }
			   country_event = { id = nomad.1 }
            }			
		}
	    else_if = {		
		    limit = {
			    years_passed = 110
			}
			if = {
			    limit = { is_difficulty > 1 }			
		        event_target:mod_events_caller = {					
				    country_event = { id = mod_neutral_grow.27 }	
                }
            }			
        }			
	    else_if = {		
		    limit = {
			    years_passed = 115
			}
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {			
			        country_event = { id = mod_neutral_grow.3 }					
                }				
            }						
		}	
	    else_if = {
		    limit = {
			    years_passed = 120
			}
			event_target:mod_events_caller = {					
				country_event = { id = mod_neutral_grow.29 }	
            }					
		}			
	    else_if = {		
		    limit = {
			    years_passed = 125
			}
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {			
			        country_event = { id = mod_neutral_grow.36 }					
                }				
            }							
		}			        
	    else_if = {
		    limit = {
			    years_passed = 135
			}
			event_target:mod_events_caller = {					
				country_event = { id = mod_neutral_grow.37 }
                country_event = { id = mod_neutral_grow.30 }				
            }				
		}			
	    else_if = {
		    limit = {
			    years_passed = 145
			}
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {	
                    add_modifier = { modifier = for_solo_buff_4 days = 120 }				
			        country_event = { id = mod_neutral_grow.3 }					
                }				
            }			
		}
	    else_if = {
		    limit = {
			    years_passed = 150
			}
			event_target:mod_events_caller = {					
				country_event = { id = mod_neutral_grow.32 }	
            }					
		}		
	    else_if = {		
		    limit = {
			    years_passed = 155
			}
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {	
                    add_modifier = { modifier = for_solo_buff_4 days = 120 }				
			        country_event = { id = mod_neutral_grow.36 }					
                }				
            }
        }			
	    else_if = {
		    limit = {
			    years_passed = 165
			}
			every_country = {
			    limit = {
				    is_country_type = pirate
				}
				add_modifier = { modifier = for_solo_buff_4 days = 120 }
			}
			event_target:mod_events_caller = {					
				country_event = { id = mod_neutral_grow.37 }	
            }				
		}		
	}
}
event = {
	id = mod_neutral_grow.15
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
	    NOR = { 
		    has_global_flag = debug_15
            has_global_flag = mod_15 
		}		
	    years_passed > 9		
	}
	immediate = {
	    set_timed_global_flag = { flag = mod_15 days = 70 }	
			event_target:mod_events_caller = {						
				country_event = { id = mod_neutral_grow.8 }
				country_event = { id = mod_neutral_grow.10 }
				country_event = { id = mod_neutral_grow.11 }
				country_event = { id = mod_neutral_grow.12 }
				country_event = { id = mod_neutral_grow.13 }
				country_event = { id = mod_neutral_grow.14 }	
            }		
	    if = { limit = {years_passed < 45}
		    every_country = { limit = { has_origin = origin_doomsday is_ai = yes }
			    if = { limit = { country_uses_food = yes resource_stockpile_compare = { resource = minerals value >= 1000 } }
			        if = { limit = { resource_stockpile_compare = { resource = food value < 700 } }
					    add_resource = { food = 300 }    
					    add_resource = { minerals = -450 } 						
					}	
				}
			    if = { limit = { country_uses_consumer_goods = yes resource_stockpile_compare = { resource = minerals value >= 1000 } }
			        if = { limit = { resource_stockpile_compare = { resource = consumer_goods value < 400 } }
					    add_resource = { consumer_goods = 300 }    
					    add_resource = { minerals = -450 } 						
					}					
				}					
			}
		}			
	    if = {
            limit = { exists = event_target:nomad_new_country }
            event_target:nomad_new_country = {
			    add_resource = { rare_crystals = 6 }
				add_resource = { exotic_gases = 6 }
            }
        }			
	    if = {
            limit = { exists = event_target:spawning_dragons }
            event_target:spawning_dragons = {	
				if = { limit = { NOT = { has_modifier = basic_buff_1} } add_modifier = { modifier = for_solo_buff_1 days = -1 } }
				if = { limit = { NOT = { has_modifier = basic_buff_2} } add_modifier = { modifier = basic_buff_2 days = -1 } }				
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
				if = { limit = { NOT = { has_modifier = basic_buff_1} } add_modifier = { modifier = for_solo_buff_1 days = -1 } }
				if = { limit = { NOT = { has_modifier = basic_buff_2} } add_modifier = { modifier = basic_buff_2 days = -1 } }	
				if = { limit = { NOT = { has_modifier = basic_buff_3} } add_modifier = { modifier = for_solo_buff_3 days = -1 } }
				if = { limit = { NOT = { has_modifier = basic_buff_4} } add_modifier = { modifier = basic_buff_4 days = -1 } }	
				if = { limit = { NOT = { has_modifier = basic_buff_5} } add_modifier = { modifier = for_solo_buff_5 days = -1 } }			
			}
		}
	}
}

country_event = {
	id = mod_neutral_grow.2
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = drone_system_4
                     has_star_flag = drone_system_1	
					 has_star_flag = drone_system_2
					 has_star_flag = drone_system_3
					 has_star_flag = drone_destroyer_system	
				     has_star_flag = drone_home_system							 
				}
					any_ship_in_system = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }						
						is_in_combat = no
					}				
			}
# drones			
		    # distant star big drone fleet
	        if = {
	            limit = {
					has_star_flag = drone_system_4
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_5
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 11
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer"
							}
						}
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}
		    # normal drones fleet 1
	        else_if = {
	            limit = {
					has_star_flag = drone_system_1
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_3
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone"
							}
						}
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # normal drones fleet 2
	        else_if = {
	            limit = {
					has_star_flag = drone_system_2
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_3
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone"
							}
						}
						while = {
							count = 1
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer"
							}
						}
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			every_fleet_in_system = {
				    limit = {
					    exists = owner					
					    owner = { is_same_value = event_target:drone_country }	
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_mining_drone
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_corvette
							}
						    count = 2
						}							
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
				}
			}	
		    # normal drones destroyers
	        else_if = {
	            limit = {
					has_star_flag = drone_destroyer_system
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_3
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer"
							}
						}
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # normal drones 3
	        else_if = {
	            limit = {
					has_star_flag = drone_system_3
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_3
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone"
							}
						}
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # home system
	        else_if = {
	            limit = {
					has_star_flag = drone_home_system
		        }
                every_fleet_in_system = {
				    limit = {
					    owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_destroyer
							}
						    count < 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_mining_drone
							}
						    count > 0
						}						
					}
					while = {
						count = 4
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 1
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}
				}		
                every_fleet_in_system = {
				    limit = {
					    owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_destroyer
							}
						    count > 0
						}
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Destroyer"
						}
					}
				}				
			}								
		}
	}
}
#amoeba + small
country_event = {
	id = mod_neutral_grow.4
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
        if = { limit = { exists = event_target:amoeba_country }
        event_target:amoeba_country = {	
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}					
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes		
					random_small_amoeba = yes		
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes			
					random_small_amoeba = yes						
				}	
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 1
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes						
				}				
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}					
					}
					random_small_amoeba = yes								
				}			
		    }
		}
		}
        if = { limit = { exists = event_target:amoeba_country_borderless }
        event_target:amoeba_country_borderless = {	
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}					
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes		
					random_small_amoeba = yes		
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes			
					random_small_amoeba = yes						
				}	
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 1
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes						
				}				
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}					
					}
					random_small_amoeba = yes								
				}			
		    }
		}
		}		
        if = { limit = { exists = event_target:amoeba_garrison_country }
        event_target:amoeba_garrison_country = {	
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}					
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes		
					random_small_amoeba = yes		
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes			
					random_small_amoeba = yes						
				}	
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 1
						}					
					}
					random_small_amoeba = yes		
					random_small_amoeba = yes						
				}				
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}					
					}
					random_small_amoeba = yes								
				}			
		    }
		}
		}		
	}
}
#tyanki + small
country_event = {
	id = mod_neutral_grow.5
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
		if = {
			limit = { exists = event_target:tiyanki_country }	
          event_target:tiyanki_country = {
            add_modifier = { modifier = basic_buff_1 days = -1 }		
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_whale_1
							}
						    count > 0
						}					
					}
					random_list = {
					   10 = {
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }	
						}
					   10 = {
				            create_ship = {
					            name = "NAME_Hatchling"
					            design = "NAME_Tiyanki_Hatchling"
				            }	
						}						
                    }						
				}			
		    }
		  }
		}
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }				
		        every_system = {	
                    limit = { has_star_flag = tiyanki_spawn_system }
					random_system_planet = {
					    limit = {
			                is_star = yes						
						}
                        event_target:tiyanki_garrison_country = {	
                            add_modifier = { modifier = basic_buff_1 days = -1 }						
				            create_fleet = {
					            name = "NAME_Tiyanki_Space_Whale"
					            effect = {
						            set_owner = event_target:tiyanki_garrison_country					
	                                random_list = {
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }																						
		                                }	
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }										
                                    }
                                    set_location = PREVPREV
					                set_fleet_stance = passive
					                set_aggro_range_measure_from = return_point
					                set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv1.tr1"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:tiyanki_spawn_system
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv1.tr2"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS														
				                                    }
			                                    }												
											}
										}
									}
					            }						    
					        }					
                        }
			        }		
	            }
			}
	}
}								
#gardeners
country_event = {
	id = mod_neutral_grow.8
	hide_window = yes
	is_triggered_only = yes		
	trigger = { 	
	    exists = event_target:gardener_country 
	}
	immediate = {
        event_target:gardener_country = {
				if = {
					limit = {
						NOT = {
							has_modifier = basic_buff_1
						}
					}
					add_modifier = {
						modifier = basic_buff_1
						days = -1
					}
				}	
				if = {
					limit = {
					    years_passed > 19
						NOT = {
							has_modifier = basic_buff_2
						}
					}
					add_modifier = {
						modifier = basic_buff_2
						days = -1
					}
				}	
				if = {
					limit = {
					    years_passed > 29
						NOT = {
							has_modifier = basic_buff_3
						}
					}
					add_modifier = {
						modifier = basic_buff_3
						days = -1
					}
				}				
		}
	}
}				
#ratling 1
country_event = {
	id = mod_neutral_grow.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
	    exists = event_target:ratling_pre_space_country 
	}
	immediate = {
        event_target:ratling_pre_space_country = {	
				if = {
					limit = {
						NOR = { 
						    has_modifier = ratling_buff_1
						    is_country_type = default
						}
					}
					add_modifier = { modifier = ratling_buff_1 days = -1 }
				}				
		}
	}
}
#ratling 2
country_event = {
	id = mod_neutral_grow.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
	    exists = event_target:ratling_country 
	}
	immediate = {
        event_target:ratling_country = {	
				if = {
					limit = {
						NOT = { has_modifier = ratling_buff_2 }
					}
					add_modifier = { modifier = ratling_buff_2 days = -1 }
				}			
		}
	}
}
country_event = {
	id = mod_neutral_grow.7
	hide_window = yes
	is_triggered_only = yes
	    immediate = {
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_1 days = -1 }
                }
			}			
			#amoeba
			if = {
			    limit = { exists = event_target:amoeba_country }
		        event_target:amoeba_country = {
		            add_modifier = { modifier = basic_buff_1 days = -1 }				
				    country_event = { id = mod_neutral_grow.4 }
                }
			}	
			else_if = {
			    limit = { exists = event_target:amoeba_garrison_country }
		        event_target:amoeba_garrison_country = {
				    country_event = { id = mod_neutral_grow.4 }
                }
			}						
			#tyanki
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }
		        event_target:tiyanki_garrison_country = {
					country_event = { id = mod_neutral_grow.5 }
                }
			}
			else_if = {
			    limit = { exists = event_target:tiyanki_country }
		        event_target:tiyanki_country = {
				    country_event = { id = mod_neutral_grow.5 }
                }
			}					
			#ancient wardener	
			if = {
			    limit = { exists = event_target:ancient_warden_country }
		        event_target:ancient_warden_country = {
		        add_modifier = { modifier = basic_buff_1 days = -1 }
			    add_modifier = { modifier = for_solo_buff_1 days = -1 }
                }
			}
			if = {
			    limit = { exists = event_target:amoeba_garrison_country }
		        event_target:amoeba_garrison_country = {
		        add_modifier = { modifier = basic_buff_1 days = -1 }
                }
			}		
			if = {
			    limit = { exists = event_target:amoeba_country_borderless }
		        event_target:amoeba_country_borderless = {
		        add_modifier = { modifier = basic_buff_1 days = -1 }
                }
			}			
        }			
}
#gish
country_event = {
	id = mod_neutral_grow.12
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
		exists = event_target:time_loop_country 
		is_difficulty > 2
	}
	immediate = {
        event_target:time_loop_country = {	
				if = {
					limit = {
						used_naval_capacity_percent < 0.6
						NOT = { has_modifier = basic_buff_1 }
					}
					add_modifier = { modifier = basic_buff_1 days = -1 }
				}		
				else_if = {
					limit = {
						used_naval_capacity_percent >= 0.6
						has_modifier = basic_buff_1 
					}
					remove_modifier = basic_buff_1
				}				
		}
	}
}
#haters
country_event = {
	id = mod_neutral_grow.13
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
		exists = event_target:mardak_vol_haters_country
	}
	immediate = {
        event_target:mardak_vol_haters_country = {	
				if = {
					limit = {
						NOT = { has_modifier = basic_buff_1 }
					}
					add_modifier = { modifier = basic_buff_1 days = -1 }
				}
				if = {
					limit = {
					    years_passed > 19
						NOT = { has_modifier = basic_buff_2 }
					}
					add_modifier = { modifier = basic_buff_2 days = -1 }
				}
				if = {
					limit = {
					    years_passed > 29
						NOT = { has_modifier = basic_buff_3 }
					}
					add_modifier = { modifier = basic_buff_3 days = -1 }
				}
				if = {
					limit = {
					    years_passed > 39
						NOT = { has_modifier = basic_buff_4 }
					}
					add_modifier = { modifier = basic_buff_4 days = -1 }
				}	
				if = {
					limit = {
					    years_passed > 49
						NOT = { has_modifier = basic_buff_5 }
					}
					add_modifier = { modifier = basic_buff_5 days = -1 }
				}				
		}
	}
}
# Privateers
country_event = {
	id = mod_neutral_grow.14
	hide_window = yes
	is_triggered_only = yes
	trigger = { 
		exists = event_target:pirate_country
	}
	immediate = {
        event_target:pirate_country = {	
				if = {
					limit = {
					    years_passed > 64
						NOT = { has_modifier = basic_buff_1 }
					}
					add_modifier = { modifier = basic_buff_1 days = -1 }
				}
				if = {
					limit = {
					    years_passed > 78
						NOT = { has_modifier = basic_buff_2 }
					}
					add_modifier = { modifier = basic_buff_2 days = -1 }
				}
				if = {
					limit = {
					    years_passed > 91
						NOT = { has_modifier = basic_buff_3 }
					}
					add_modifier = { modifier = basic_buff_3 days = -1 }
				}	
				if = {
					limit = {
					    years_passed > 103
						NOT = { has_modifier = basic_buff_4 }
					}
					add_modifier = { modifier = basic_buff_4 days = -1 }
				}	
				if = {
					limit = {
					    years_passed > 114
						NOT = { has_modifier = basic_buff_5 }
					}
					add_modifier = { modifier = basic_buff_5 days = -1 }
				}
			if = {	limit = { years_passed > 19 NOT = { has_country_flag = mod_privater_launched } }
		        random_system = {
				    limit = { has_star_flag = pirate_home_system }
			        closest_system = {
				        max_steps = 15
			            limit = {
				            exists = space_owner
					        space_owner = { is_country_type = default }
					        has_trade_route = yes
				            trade_route_value > 9
					        NOT = { 
					            any_ship_in_system = {
						            exists = owner
							        owner = { is_same_value = event_target:pirate_country }
						        } 
					        }
				        }				
			            random_system_planet = {
				            limit = {
					            is_star = yes
				            }
				            save_event_target_as = mod_privater_target
							set_timed_planet_flag = { flag = privater_target_timed days = 900 }
			            }				
                    }
                }							
        if = { limit = { exists = event_target:mod_privater_target }
			random_list = {
				10 = {
					set_timed_country_flag = {flag = mod_privater_launched days = 1800 }
				}
				10 = {
					set_timed_country_flag = {flag = mod_privater_launched days = 2400 }			
				}
				10 = {
					set_timed_country_flag = {flag = mod_privater_launched days = 3000 }			
				}			
			}
			random_system = { limit = { has_star_flag = pirate_home_system }
				random_system_planet = {
						limit = {
							is_star = yes
						}
						save_event_target_as = mod_privater_from
				}	
			}	
			create_leader = {
				class = admiral
				species = owner_main_species
				name = random
				skill = 3
				traits = {
					trait = random_trait
				}
			}		
			create_fleet = {
				name = "NAME_Pirate_Fleet"
				effect = {
					set_owner = event_target:pirate_country					
					if = { limit = { years_passed < 40 }
						while = {
							count = 4
							create_ship = {
								name = random
								design = "NAME_Reaver"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = random
								design = "NAME_Brigand"
								graphical_culture = "pirate_01"
							}
						}
					}	
					else_if = { limit = { years_passed < 55 }
						while = {
							count = 5
							create_ship = {
								name = random
								design = "NAME_Skull"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = random
								design = "NAME_Brigand"
								graphical_culture = "pirate_01"
							}
						}
					}	
					else_if = { limit = { years_passed < 70 }
						while = {
							count = 6
							create_ship = {
								name = random
								design = "NAME_Skull"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Marauder"
								graphical_culture = "pirate_01"
							}
						}
					}	
					else_if = { limit = { years_passed < 85 }
						while = {
							count = 8
							create_ship = {
								name = random
								design = "NAME_Reaver"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = random
								design = "NAME_Corsair"
								graphical_culture = "pirate_01"
							}
						}
					}	
					else_if = { limit = { years_passed < 100 }
						while = {
							count = 6
							create_ship = {
								name = random
								design = "NAME_Skull"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Marauder"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = random
								design = "NAME_Black_Earl"
								graphical_culture = "pirate_01"
							}
						}					
					}
					else = {
						while = {
							count = 8
							create_ship = {
								name = random
								design = "NAME_Skull"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = random
								design = "NAME_Corsair"
								graphical_culture = "pirate_01"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = random
								design = "NAME_Black_Earl"
								graphical_culture = "pirate_01"
							}
						}					
					}
					if = { limit = { years_passed < 30 }
						add_modifier = { modifier = advanced_debuff days = -1 }
					}	
					else_if = { limit = { years_passed < 50 }
						add_modifier = { modifier = basic_debuff_1 days = -1 }
					}				
					assign_leader = last_created_leader
					set_location = event_target:mod_privater_from
					set_fleet_stance = aggressive
					random_list = {
						10 = {
							set_aggro_range = 60
						}
						10 = {
							set_aggro_range = 90			
						}
						10 = {
							set_aggro_range = 120			
						}						
						10 = {
							set_aggro_range = 30			
						}			
					}	
					set_aggro_range_measure_from = self	
                    set_fleet_flag = priv_attack					
					auto_move_to_planet = {
						target = event_target:mod_privater_target
						clear_auto_move_on_arrival = yes
					}				
				}				
			}
			event_target:pirate_country = { 
				random_list = {
					10 = {			
						country_event = { id = mod_neutral_grow.40 days = 150 } 
					}
					10 = {			
						country_event = { id = mod_neutral_grow.40 days = 200 } 
					}
					10 = {			
						country_event = { id = mod_neutral_grow.40 days = 250 } 
					}					
				}
			}
		}
		    }
		}
	}
}
country_event = {
	id = mod_neutral_grow.40
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    every_owned_fleet = {
		    limit = { has_fleet_flag = priv_attack }
			if = {
				limit = {
					any_owned_ship = {
						solar_system = { has_star_flag = pirate_home_system }
					}
				}
				destroy_fleet = this
				event_target:pirate_country = {
				    remove_country_flag = mod_privater_launched
				}
			}
			else = {
				set_aggro_range = 240    
			}
        }		
	}
}
country_event = {
	id = mod_neutral_grow.16
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    log = "crystal event started"
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = blue_system
                     has_star_flag = blue2_system
					 has_star_flag = green_system
					 has_star_flag = green2_system
					 has_star_flag = red_system	
				     has_star_flag = red2_system	
				     has_star_flag = hostile_system	
                     has_star_flag = crystal_home_system					 
				}
					any_ship_in_system = {
					    exists = owner
						owner = {
						    is_same_value = event_target:crystal_country
							}
						is_in_combat = no
					}				
			}
# crystals			
		    # blue strong system
	        if = {
	            limit = {
					has_star_flag = blue_system
		        }
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Sapphire_Lurkers"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 5
							        create_ship = {
								        name = ""
								        design = "NAME_Large_Crystal_Entity_Blue"
							        }
						        }
						        while = {
							        count = 6
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Blue"
							        }
						        }
						        while = {
							        count = 14
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Blue"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_blue
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }					
			}
		    # big blue system
	        else_if = {
	            limit = {
					has_star_flag = blue2_system
		        }
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = mod_blue_patrol_1
			}	
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = mod_blue_patrol_2
			}			
		    random_system_planet = {
			limit = { 
			    is_star = no 
				is_moon = no
			    NOR = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
					is_same_value = event_target:mod_blue_patrol_2					
			    }
			}
			save_event_target_as = mod_blue_patrol_3
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Lurkers"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Blue"
							}
						}						
						while = {
							count = 14
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Blue"
							}						
						}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
                        queue_actions = {
								repeat = {
									find_closest_planet = {
										trigger = {
											id = "mod_blue_trigger_1"
											is_planet = event_target:mod_blue_patrol_1
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_blue_trigger_2"
											is_planet = event_target:mod_blue_patrol_2
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_blue_trigger_3"
											is_planet = event_target:mod_blue_patrol_3
										}
										found_planet = {
											orbit_planet = THIS
										}
									}									
                                }
                        }								
					}
				}
			}
		}
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_blue
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }			
			}	
		    # green patrool system
	        else_if = {
	            limit = {
					has_star_flag = green_system
		        }
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = mod_green1_patrol_1
			}	
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = mod_green1_patrol_2
			}			
		    random_system_planet = {
			limit = { 
			    is_star = no 
				is_moon = no
			    NOR = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
					is_same_value = event_target:mod_green1_patrol_2					
			    }
			}
			save_event_target_as = mod_green1_patrol_3
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Emerald_Roamers"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 2
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Green"
							        }
						        }
						        while = {
							        count = 7
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Green"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
                        queue_actions = {
								repeat = {
									find_closest_planet = {
										trigger = {
											id = "mod_green1_trigger_1"
											is_planet = event_target:mod_green1_patrol_1
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_green1_trigger_2"
											is_planet = event_target:mod_green1_patrol_2
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_green1_trigger_3"
											is_planet = event_target:mod_green1_patrol_3
										}
										found_planet = {
											orbit_planet = THIS
										}
									}									
                                }
                        }								
					        }
				        }
				}
			  }
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_green
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_green
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_green
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }			  
			}	
		    # big green system
	        else_if = {
	            limit = {
					has_star_flag = green2_system
		        }
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = mod_green2_patrol_1
			}	
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = mod_green2_patrol_2
			}			
		    random_system_planet = {
			limit = { 
			    is_star = no 
				is_moon = no
			    NOR = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
					is_same_value = event_target:mod_green2_patrol_2					
			    }
			}
			save_event_target_as = mod_green2_patrol_3
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Emerald_Roamers"
					effect = {
						set_owner = event_target:crystal_country
					while = {
						count = 6
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Green"
						}
					}						
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green"
						}
					}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
                        queue_actions = {
								repeat = {
									find_closest_planet = {
										trigger = {
											id = "mod_green2_trigger_1"
											is_planet = event_target:mod_green2_patrol_1
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_green2_trigger_2"
											is_planet = event_target:mod_green2_patrol_2
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_green2_trigger_3"
											is_planet = event_target:mod_green2_patrol_3
										}
										found_planet = {
											orbit_planet = THIS
										}
									}									
                                }
                        }						
					}
				}
			}
		}	
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_green
							}
						    count = 3
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_green
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_green
							}
						    count = 0
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }			
			}	
		    # big red system
	        else_if = {
	            limit = {
					has_star_flag = red_system
		        }
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = mod_red1_patrol_1
			}	
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = mod_red1_patrol_2
			}			
		    random_system_planet = {
			limit = { 
			    is_star = no 
				is_moon = no
			    NOR = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
					is_same_value = event_target:mod_red1_patrol_2					
			    }
			}
			save_event_target_as = mod_red1_patrol_3
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Stack"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 4
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red"
						            }
					            }
					            while = {
						            count = 3
						            create_ship = {
							            name = ""
							            design = "NAME_Medium_Crystal_Entity_Red"
						            }
					            }
					            while = {
						            count = 14
						            create_ship = {
							            name = ""
							            design = "NAME_Small_Crystal_Entity_Red"
						            }
					            }								
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_red
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_red
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_red
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }					
			}	
		    # big red2 system
	        else_if = {
	            limit = {
					has_star_flag = red2_system
		        }
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = mod_red2_patrol_1
			}	
			random_system_planet = {
				limit = {
					is_star = no
					is_moon = no
				}
				save_event_target_as = mod_red2_patrol_2
			}			
		    random_system_planet = {
			limit = { 
			    is_star = no 
				is_moon = no
			    NOR = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
					is_same_value = event_target:mod_red2_patrol_2					
			    }
			}
			save_event_target_as = mod_red2_patrol_3
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Swarm"
					        effect = {
						        set_owner = event_target:crystal_country
					while = {
						count = 9
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red"
						}
					}					
					while = {
						count = 11
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red"
						}
					}
					while = {
						count = 39
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red"
						}
					}
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
								queue_actions = {
								repeat = {
									find_closest_planet = {
										trigger = {
											id = "mod_red2_trigger_1"
											is_planet = event_target:mod_red2_patrol_1
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_red2_trigger_2"
											is_planet = event_target:mod_red2_patrol_2
										}
										found_planet = {
											orbit_planet = THIS
										}
									}
									find_closest_planet = {
										trigger = {
											id = "mod_red2_trigger_3"
											is_planet = event_target:mod_red2_patrol_3
										}
										found_planet = {
											orbit_planet = THIS
										}
									}									
                                }
                                }								
					        }
				        }
			        }
		        }	
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_red
							}
						    count = 2
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_red
							}
						    count = 2
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_red
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_1 days = -1 }
		          }					
			}			
			else_if = {
	            limit = {
					NOT = { has_star_flag = crystal_home_system }
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
					}
						while = {
							count = 3
							create_ship = {
								name = "NAME_Shardling"
								design = "NAME_Small_Crystal_Entity_Blue"
							}
						}					
				}
			}
		}
	}
}
# drones grow in numbers
country_event = {
	id = mod_neutral_grow.17
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = drone_system_4
                     has_star_flag = drone_system_1	
					 has_star_flag = drone_system_2
					 has_star_flag = drone_system_3
					 has_star_flag = drone_destroyer_system	
				     has_star_flag = drone_home_system	
                     has_star_flag = drone_exp_1	
                     has_star_flag = drone_exp_2					 
				}			
			}			
		    # distant star big drone fleet
	        if = {
	            limit = {
					has_star_flag = drone_system_4
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}
					create_ship = {
						name = ""
						design = "NAME_Ancient_Destroyer"
					}											
				}            
			}
		    # drone expansion system 1
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_1
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
                        is_in_combat = no					
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}											
				} 				

			}		
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_2
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
                        is_in_combat = no					
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}											
				} 				

			}			
		    # normal drones fleet 1
	        else_if = {
	            limit = {
					has_star_flag = drone_system_1
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
                        is_in_combat = no					
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}											
				} 				

			}	
		    # normal drones fleet 2
	        else_if = {
	            limit = {
					has_star_flag = drone_system_2
		        }
                every_fleet_in_system = {
				    limit = {
					    exists = owner					
					    owner = { is_same_value = event_target:drone_country }	
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_mining_drone
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_corvette
							}
						    count = 2
						}							
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
				}				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_mining_drone
							}
						    count > 2
						}						
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}
					create_ship = {
						name = ""
						design = "NAME_Ancient_Destroyer"
					}											
				}
			}	
		    # normal drones destroyers
	        else_if = {
	            limit = {
					has_star_flag = drone_destroyer_system
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}											
				}
			}	
		    # normal drones 3
	        else_if = {
	            limit = {
					has_star_flag = drone_system_3
		        }				
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}											
				}
			}	
		    # home system
	        else_if = {
	            limit = {
					has_star_flag = drone_home_system
		        }		
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:drone_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_destroyer
							}
						    count < 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_mining_drone
							}
						    count > 0
						}
                        }						
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Ancient_Mining_Drone"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Ancient_Combat_Drone"
						}
					}				
                    }	
					else_if = {
					    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = ancient_destroyer
							}
						    count > 0
						}
                        }						
					create_ship = {
						name = ""
						design = "NAME_Ancient_Destroyer"
					}				
                    }							
				}			
			}					
		}
	}
}
#amoeba, tyanki, clouds, crystals +10%
country_event = {
	id = mod_neutral_grow.18
	hide_window = yes
	is_triggered_only = yes
	immediate = {
			if = {
			    limit = { exists = event_target:drone_country }
		        event_target:drone_country = {
				    add_modifier = { modifier = basic_buff_1 days = -1 }
                }
			}	
			#amoeba
			if = {
			    limit = { exists = event_target:amoeba_country }
		        event_target:amoeba_country = {
				    add_modifier = { modifier = basic_buff_2 days = -1 }
                }
			}	
			if = {
			    limit = { exists = event_target:amoeba_garrison_country }
		        event_target:amoeba_garrison_country = {
				    add_modifier = { modifier = basic_buff_2 days = -1 }
                }
			}			
			#tyanki
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }
		        event_target:tiyanki_garrison_country = {
				    add_modifier = { modifier = basic_buff_2 days = -1 }
                }
			}
			if = {
			    limit = { exists = event_target:tiyanki_country }
		        event_target:tiyanki_country = {
				    add_modifier = { modifier = basic_buff_2 days = -1 }
                }
			}			
			#crystal
			if = {
			    limit = { exists = event_target:crystal_country }
		        event_target:crystal_country = {
				    add_modifier = { modifier = basic_buff_1 days = -1 }
                }
			}		
			#ancient wardener	
			if = {
			    limit = { exists = event_target:ancient_warden_country }
		        event_target:ancient_warden_country = {
		        add_modifier = { modifier = basic_buff_2 days = -1 }
			    add_modifier = { modifier = for_solo_buff_2 days = -1 }
                }
			}	
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_2 days = -1 }
                }
			}			
	}
}	
#amoeba + big
country_event = {
	id = mod_neutral_grow.19
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
		    limit = { exists = event_target:amoeba_country }
        event_target:amoeba_country = {	
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba
							}
						    count > 0
						}						
					}
					random_big_amoeba = yes					
				}			
		    }
		}
		}
	    if = {
		    limit = { exists = event_target:amoeba_garrison_country }
        event_target:amoeba_garrison_country = {	
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba
							}
						    count > 0
						}						
					}
					random_big_amoeba = yes					
				}			
		    }
		}
		}		
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }				
		        every_system = {	
                    limit = { has_star_flag = tiyanki_spawn_system }
					random_system_planet = {
					    limit = {
                            is_star = yes													
						}
                        event_target:tiyanki_garrison_country = {							
				            create_fleet = {
					            name = "NAME_Tiyanki_Space_Whale"
					            effect = {
						            set_owner = event_target:tiyanki_garrison_country					
	                                random_list = {
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }																						
		                                }	
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }										
                                    }
                                    set_location = PREVPREV
					                set_fleet_stance = passive
					                set_aggro_range_measure_from = return_point
					                set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv2.tr1"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:tiyanki_spawn_system
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv2.tr2"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS														
				                                    }
			                                    }												
											}
										}
									}
					            }						    
					        }					
                        }
			        }		
	            }
			}
	}
}
#crystals + 30%	
country_event = {
	id = mod_neutral_grow.20
	hide_window = yes
	is_triggered_only = yes
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = blue_system
                     has_star_flag = blue2_system
					 has_star_flag = green_system
					 has_star_flag = green2_system
					 has_star_flag = red_system	
				     has_star_flag = red2_system	
				     has_star_flag = hostile_system	
                     has_star_flag = crystal_home_system					 
				}
					any_ship_in_system = {
					    exists = owner
						owner = {
						    is_same_value = event_target:crystal_country
						}
					}				
			}
# crystals			
		    # blue strong system
	        if = {
	            limit = {
					has_star_flag = blue_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
						OR = {
                          count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_blue
							}
						    count > 1
						  }
                          count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_blue
							}
						    count > 1
						  }						
                        }						
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Blue"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Blue"
						}
					}
					create_ship = {
						name = ""
						design = "NAME_Large_Crystal_Entity_Blue"
					}					
				}
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_blue
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
		          }			        
			}
		    # big blue system
	        else_if = {
	            limit = {
					has_star_flag = blue2_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_blue
							    }
						        count > 1
						}
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Blue"
						    }
					    }
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Blue"
						    }
					    }						
					}
                    else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_blue
							    }
						        count > 1
						}
						}					
					    while = {
						    count = 5
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Blue"
						    }
					    }					    
					}					
				}	
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_blue
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_blue
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
		          }					
			}	
		    # green patrool system
	        else_if = {
	            limit = {
					has_star_flag = green_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
						OR = {
                          count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_green
							}
						    count > 1
						  }
                          count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_green
							}
						    count > 1
						  }						
                        }						
					}
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green"
						}
					}
					while = {
						count = 2
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Green"
						}
					}
					create_ship = {
						name = ""
						design = "NAME_Large_Crystal_Entity_Green"
					}					
				}
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_green
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_green
							}
						    count = 1
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_green
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
		          }					
			}	
		    # big green system
	        else_if = {
	            limit = {
					has_star_flag = green2_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_green
							    }
						        count > 0
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_green
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Green"
						    }
					    }
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Green"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_green
							    }
						        count > 0
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_green
							    }
						        count < 1
						    }							
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Green"
						    }
					    }						
					}					
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_green
							    }
						        count < 1
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_green
							    }
						        count > 3
						    }							
						}
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Green"
						    }
					    }						
					}				
				}
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_green
							}
						    count = 3
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_green
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_green
							}
						    count = 0
						}				
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
		          }					
			}	
		    # big red system
	        else_if = {
	            limit = {
					has_star_flag = red_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count > 1
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_red
							    }
						        count < 1
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red"
						}						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_red
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Red"
						    }
					    }						
					}					
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count < 1
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_red
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 5
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count > 0
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_red
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red"
						    }
					    }
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red"
						}						
					}					
				}
				   every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_small_red
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_medium_red
							}
						    count = 0
						}
						count_owned_ship = {
						    limit = {
							    is_ship_size = crystal_ship_large_red
							}
						    count = 1
						}				
					}
                    add_modifier = { modifier = for_solo_buff_2 days = -1 }
		          }					
			}	
		    # big red2 system
	        else_if = {
	            limit = {
					has_star_flag = red2_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count > 0
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_red
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Red"
						    }
					    }	
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count < 1
						    }						
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_red
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Red"
						    }
					    }	
					    while = {
						    count = 3
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red"
						    }
					    }						
					}					
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red
							    }
						        count < 1
						    }
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_medium_red
							    }
						        count < 1
						    }							
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_small_red
							    }
						        count > 0
						    }							
						}
					    while = {
						    count = 6
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red"
						    }
					    }						
					}					
				}				
			}
	        else_if = {
	            limit = {
					has_star_flag = crystal_home_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Red_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red_Elite"
						    }
					    }						
					}	
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_yellow_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Yellow_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Yellow_Elite"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_blue_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Blue_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Blue_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Blue_Elite"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_green_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Green_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Green_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Green_Elite"
						    }
					    }						
					}					
				}				
			}			
			else_if = {
	            limit = {
					NOT = { has_star_flag = crystal_home_system }
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
						while = {
							count = 2
							create_ship = {
								name = "NAME_Shardling"
								design = "NAME_Small_Crystal_Entity_Blue"
							}
						}					
				}
			}
		}
	}
}
#leviaphans, amoeba, tyanki, clouds, crystals +10%
event = {
	id = mod_neutral_grow.21
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:drone_country }
		    event_target:drone_country = {				
		        add_modifier = { modifier = basic_buff_2 days = -1 }
			}			
		}		
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_3 days = -1 }
                }
			}		
	    if = {
            limit = { exists = event_target:amoeba_country }
		    event_target:amoeba_country = {				
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
		    event_target:amoeba_garrison_country = {				
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country}
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_2 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:ancient_warden_country }
            event_target:ancient_warden_country = {	
		        add_modifier = { modifier = basic_buff_3 days = -1 }
				add_modifier = { modifier = for_solo_buff_3 days = -1 }
			}
		}		
# enclaves	
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_1 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_1 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_1 days = -1 }
			}
		}		
	}
}
#elite drones
country_event = {
	id = mod_neutral_grow.22
	hide_window = yes
	is_triggered_only = yes
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = drone_system_4
                     has_star_flag = drone_system_1	
					 has_star_flag = drone_system_2
					 has_star_flag = drone_system_3
					 has_star_flag = drone_destroyer_system	
				     has_star_flag = drone_home_system	
                     has_star_flag = drone_exp_1
                     has_star_flag = drone_exp_2
                     has_star_flag = drone_exp_3
                     has_star_flag = drone_exp_4				 
				}
					any_ship_in_system = {
					    exists = owner
							owner = { is_same_value = event_target:drone_country }												
						is_in_combat = no
					}				
			}
            # drone expansion system	
	        if = {
	            limit = {
					has_star_flag = drone_exp_1
		        }
		        random_system_planet = {
			        limit = { 
				        is_star = no
				        NOR = { 
				            is_planet_class = pc_gas_giant 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
				        }
			        }
			        event_target:drone_country = {
				        save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						        while = {
							        count = 13
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Mining_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 6
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Combat_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 3
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Destroyer_Tier2"
							        }
						        }
				                add_modifier = { modifier = tier2_drone_buff days = -1 }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = return_point
						        set_aggro_range = 150
						        queue_actions = {
							        repeat = {
								        wait = {
									        duration = 999
									        random = 10
								        }
							        }
						        }
					        }
				        }				
	                }
	            }
			}	
            # drone expansion system 2	
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_2
		        }
		        random_system_planet = {
			        limit = { 
				        is_star = no
				        NOR = { 
				            is_planet_class = pc_gas_giant 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
				        }
			        }
			        event_target:drone_country = {
				        save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						        while = {
							        count = 12
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Mining_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 7
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Combat_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 4
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Destroyer_Tier2"
							        }
						        }
				                add_modifier = { modifier = tier2_drone_buff days = -1 }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = return_point
						        set_aggro_range = 150
						        queue_actions = {
							        repeat = {
								        wait = {
									        duration = 999
									        random = 10
								        }
							        }
						        }
					        }
				        }				
	                }
	            }
			}	
            # drone expansion system 3	
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_3
		        }
		        random_system_planet = {
			        limit = { 
				        is_star = no
				        NOR = { 
				            is_planet_class = pc_gas_giant 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
				        }
			        }
			        event_target:drone_country = {
				        save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						        while = {
							        count = 15
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Mining_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 8
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Combat_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 4
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Destroyer_Tier2"
							        }
						        }
				                add_modifier = { modifier = tier2_drone_buff days = -1 }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = return_point
						        set_aggro_range = 150
						        queue_actions = {
							        repeat = {
								        wait = {
									        duration = 999
									        random = 10
								        }
							        }
						        }
					        }
				        }				
	                }
	            }
			}
            # drone expansion system 4	
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_4
		        }
		        random_system_planet = {
			        limit = { 
				        is_star = no
				        NOR = { 
				            is_planet_class = pc_gas_giant 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
				        }
			        }
			        event_target:drone_country = {
				        save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						        while = {
							        count = 14
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Mining_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 9
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Combat_Drone_Tier2"
							        }
						        }
						        while = {
							        count = 5
							        create_ship = {
								        name = ""
								        design = "NAME_Ancient_Destroyer_Tier2"
							        }
						        }
				                add_modifier = { modifier = tier2_drone_buff days = -1 }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = return_point
						        set_aggro_range = 150
						        queue_actions = {
							        repeat = {
								        wait = {
									        duration = 999
									        random = 10
								        }
							        }
						        }
					        }
				        }				
	                }
	            }
			}		
		    # distant star big drone fleet
	        else_if = {
	            limit = {
					has_star_flag = drone_system_4
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_6
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 15
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 8
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}
		    # normal drones fleet 1
	        else_if = {
	            limit = {
					has_star_flag = drone_system_1
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_4
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # normal drones fleet 2
	        else_if = {
	            limit = {
					has_star_flag = drone_system_2
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_5
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 8
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # normal drones destroyers
	        else_if = {
	            limit = {
					has_star_flag = drone_destroyer_system
		        }
		    random_system_planet = {
			limit = { 
				has_deposit_for = shipclass_mining_station
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_6
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # normal drones 3
	        else_if = {
	            limit = {
					has_star_flag = drone_system_3
		        }
		    random_system_planet = {
			limit = { 
				has_deposit_for = shipclass_mining_station
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_4
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
			}	
		    # home system
	        else_if = {
	            limit = {
					has_star_flag = drone_home_system
		        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_6
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 11
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }
		    random_system_planet = {
			limit = { 
				is_star = no
				NOR = { 
				    is_planet_class = pc_gas_giant 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
				}
			}
			add_deposit = d_minerals_6
			event_target:drone_country = {
				save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 150
						queue_actions = {
							repeat = {
								wait = {
									duration = 999
									random = 10
								}
							}
						}
					}
				}				
	        }
	        }			
			}			
		}
	}
}
#amoeba, tyanki, clouds, crystals +10%
country_event = {
	id = mod_neutral_grow.23
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}		
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_4 days = -1 }
					add_modifier = { modifier = for_solo_buff_2 days = -1 }
                }
			}		
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:ancient_warden_country }
            event_target:ancient_warden_country = {	
		        add_modifier = { modifier = basic_buff_4 days = -1 }
				add_modifier = { modifier = for_solo_buff_4 days = -1 }
			}
		}
	}
}
#amoeba + small
country_event = {
	id = mod_neutral_grow.24
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {			
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 4
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}			
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}	
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes			
				}				
		    }
		}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country= {			
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 4
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}			
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}	
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes			
				}				
		    }
		}
		}	
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {			
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 4
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes					
				}
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 3
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}			
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 2
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes
					random_small_amoeba = yes				
				}	
			    else_if = {
				    limit = {		
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_amoeba_mother
							}
						    count > 0
						}						
					}
					random_small_amoeba = yes	
					random_small_amoeba = yes			
				}				
		    }
		}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {		
            every_owned_fleet = {
			    limit = {
				    is_in_combat = no
				}
			    if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_whale_3
							}
						    count > 0
						}					
					}
	                random_list = {
		                10 = {
						    create_ship = {
							    name = "NAME_Bull"
							    design = "NAME_Tiyanki_Bull"
						    }	
		                }
		                10 = {
						    create_ship = {
							    name = "NAME_Cow"
							    design = "NAME_Tiyanki_Cow"
						    }	
		                }
                    }					
				}	
			    else_if = {
				    limit = {
						count_owned_ship = {
						    limit = {
							    is_ship_size = space_whale_1
							}
						    count > 0
						}					
					}
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }						
				}				
		    }
		}
		}
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }			
		        every_system = {	
                    limit = { has_star_flag = tiyanki_spawn_system }
					random_system_planet = {
					    limit = {
                            is_star = yes							
						}
                        event_target:tiyanki_garrison_country = {							
				            create_fleet = {
					            name = "NAME_Tiyanki_Space_Whale"
					            effect = {
						            set_owner = event_target:tiyanki_garrison_country					
	                                random_list = {
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }																						
		                                }	
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }										
                                    }
                                    set_location = PREVPREV
					                set_fleet_stance = passive
					                set_aggro_range_measure_from = return_point
					                set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv3.tr1"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:tiyanki_spawn_system
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv3.tr2"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS														
				                                    }
			                                    }												
											}
										}
									}
					            }						    
					        }					
                        }
			        }		
	            }
			}	
			
	}
}
country_event = {
	id = mod_neutral_grow.25
	hide_window = yes
	is_triggered_only = yes
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = blue_system
                     has_star_flag = blue2_system
					 has_star_flag = green_system
					 has_star_flag = green2_system
					 has_star_flag = red_system	
				     has_star_flag = red2_system	
				     has_star_flag = hostile_system	
                     has_star_flag = crystal_home_system
                     has_star_flag = cryst_exp_sys					 
				}
					any_ship_in_system = {
					    exists = owner
						owner = {
						    is_same_value = event_target:crystal_country
						}
						is_in_combat = no
					}				
			}
# crystals			
		    # blue strong system
	        if = {
	            limit = {
					has_star_flag = blue_system
		        }
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Sapphire_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 6
							        create_ship = {
								        name = ""
								        design = "NAME_Large_Crystal_Entity_Blue_Elite"
							        }
						        }
						        while = {
							        count = 7
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Blue_Elite"
							        }
						        }
						        while = {
							        count = 16
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Blue_Elite"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }
			}
		    # big blue system
	        else_if = {
	            limit = {
					has_star_flag = blue2_system
		        }
		random_system_planet = {
			limit = { 
			    is_star = no 
			    NOT = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
			    }
			}
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Guardians"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Blue_Elite"
							}
						}						
						while = {
							count = 21
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Blue_Elite"
							}						
						}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
					}
				}
			}
		}		
			}	
		    # green patrool system
	        else_if = {
	            limit = {
					has_star_flag = green_system
		        }
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Emerald_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 2
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Green_Elite"
							        }
						        }
						        while = {
							        count = 6
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Green_Elite"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }
			}	
		    # big green system
	        else_if = {
	            limit = {
					has_star_flag = green2_system
		        }
		random_system_planet = {
			limit = { 
			    is_star = no 
			    NOT = { 
			        any_fleet_in_orbit = {
					    exists = owner				    
			        }
			    }
			}
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Emerald_Guardians"
					effect = {
						set_owner = event_target:crystal_country
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Green_Elite"
						}
					}						
					while = {
						count = 9
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green_Elite"
						}
					}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
					}
				}
			}
		}		
			}	
		    # big red system
	        else_if = {
	            limit = {
					has_star_flag = red_system
		        }
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 5
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red_Elite"
						            }
					            }
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red_Elite"
						}
					}						
					while = {
						count = 9
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}								
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }				
			}	
		    # big red2 system
	        else_if = {
	            limit = {
					has_star_flag = red2_system
		        }
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 10
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red_Elite"
						            }
					            }
					while = {
						count = 14
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red_Elite"
						}
					}						
					while = {
						count = 37
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}								
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }				
			}	
	        else_if = {
	            limit = {
					has_star_flag = crystal_home_system
		        }
				every_fleet_in_system = {
				    limit = {
					    exists = owner
						owner = { is_same_value = event_target:crystal_country }
						is_in_combat = no
					}
					if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_red_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Red_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Red_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Red_Elite"
						    }
					    }						
					}	
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_yellow_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Yellow_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Yellow_Elite"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_blue_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Blue_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Blue_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Blue_Elite"
						    }
					    }						
					}
					else_if = {
					    limit = {
						    count_owned_ship = {
						        limit = {
							        is_ship_size = crystal_ship_large_green_elite
							    }
						        count > 0
						    }							
						}
						create_ship = {
							name = ""
							design = "NAME_Large_Crystal_Entity_Green_Elite"
						}	
					    while = {
						    count = 2
						    create_ship = {
							    name = ""
							    design = "NAME_Medium_Crystal_Entity_Green_Elite"
						    }
					    }	
					    while = {
						    count = 4
						    create_ship = {
							    name = ""
							    design = "NAME_Small_Crystal_Entity_Green_Elite"
						    }
					    }						
					}					
				}
            }	
			else_if = {
	            limit = {
					has_star_flag = cryst_exp_sys
		        }			
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			        }
			        event_target:crystal_country = {
			create_fleet = {
				name = "NAME_Shardlings"
				effect = {
					set_owner = event_target:crystal_country
                    add_modifier = { modifier = for_solo_buff_1 days = -1 } 	
                    add_modifier = { modifier = for_solo_buff_2 days = -1 } 		
                    add_modifier = { modifier = for_solo_buff_3 days = -1 } 		
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					set_fleet_formation = {
						position = { x = 14.0	y = -3.0	} #9
						position = { x = 1.3	y = -11.0	} #8
						position = { x = -10.5	y = 1.0		} #7
						position = { x = 3.0	y = 8.0		} #6
						position = { x = -4.3	y = -7.0	} #5
						position = { x = 8.0	y = 9.0		} #4
						position = { x = -4.0	y = 7.3		} #3 
						position = { x = 7.5	y = -10.5	} #2
						position = { x = 0.0	y = 0.0		} #1
					}
					set_formation_scale = 0.5
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 40
					set_location = {
						target = prevprev
						distance = 20
						angle = 20
					}
					queue_actions = {
					    repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_exp_sys_tr1"
					                            is_star = yes
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_exp_sys_tr2"
					                            is_star = no
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }										
						}
					}
				}
			}
			        }
		        }	
			}			
			else = {
		        random_system_planet = {
			        limit = { 
			            is_star = no 
			            NOT = { 
			                any_fleet_in_orbit = {
					            exists = owner				    
			                }
			            }
			        }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Shards_of_Obsidian"
					        effect = {
						        set_owner = event_target:crystal_country
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Blue_Elite"
						}
					}	
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}							
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green_Elite"
						}
					}
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Yellow_Elite"
						}
					}						
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
					        }
				        }
			        }
		        }	
			}
		}
	}
}
#leviaphans, amoeba, tyanki, clouds, crystals +10%
country_event = {
	id = mod_neutral_grow.26
	hide_window = yes
	is_triggered_only = yes	
	immediate = {		
# enclaves	 
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_2 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_2 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_2 days = -1 }
			}
		}		
	}
}
#amoeba, tyanki, clouds, crystals, drones
country_event = {
	id = mod_neutral_grow.27
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}	
			if = {
			    limit = { exists = event_target:mod_relic1_drones }
		        event_target:mod_relic1_drones = {
				    add_modifier = { modifier = basic_buff_7 days = -1 }
                }
			}		
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:ancient_warden_country }
            event_target:ancient_warden_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}
# enclaves	 
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_3 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_3 days = -1 }
			}
		}		
	}
}
#amoeba, tyanki, clouds, crystals, drones  100 year
country_event = {
	id = mod_neutral_grow.29
	hide_window = yes
	is_triggered_only = yes
	immediate = {
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_7 days = -1 }
			}
		}
# enclaves	 
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_4 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_4 days = -1 }
			}
		}		
	}
}
#amoeba, tyanki, clouds, crystals, drones  120 year
country_event = {
	id = mod_neutral_grow.30
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_9 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_9 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_9 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_9 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_9 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_8 days = -1 }
			}
		}
# enclaves	 
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_5 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_5 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_5 days = -1 }
			}
		}		
	}
}
#amoeba, tyanki, clouds, crystals, drones  150 year
country_event = {
	id = mod_neutral_grow.32
	hide_window = yes
	is_triggered_only = yes	
	immediate = {
	    if = {
            limit = { exists = event_target:amoeba_country }
            event_target:amoeba_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_garrison_country }
            event_target:amoeba_garrison_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:amoeba_country_borderless }
            event_target:amoeba_country_borderless = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:tiyanki_country }
            event_target:tiyanki_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}
	    if = {
            limit = { exists = event_target:tiyanki_garrison_country }
            event_target:tiyanki_garrison_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:crystal_country }
            event_target:crystal_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}		
	    if = {
            limit = { exists = event_target:drone_country }
            event_target:drone_country = {	
		        add_modifier = { modifier = basic_buff_10 days = -1 }
			}
		}
# enclaves	 
	    every_country = {
		    limit = { has_country_flag = trader_enclave_country }
			add_modifier = { modifier = basic_buff_6 days = -1 }
		}
	    if = {
            limit = { exists = event_target:artist_enclave_country }
            event_target:artist_enclave_country = {	
				add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}	
	    if = {
            limit = { exists = event_target:curator_enclave_country }
            event_target:curator_enclave_country = {	
				add_modifier = { modifier = basic_buff_6 days = -1 }
			}
		}		
	}
}
#elite drones invasion
country_event = {
	id = mod_neutral_grow.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = drone_system_4
                     has_star_flag = drone_system_1	
					 has_star_flag = drone_system_2
					 has_star_flag = drone_system_3
					 has_star_flag = drone_destroyer_system	
				     has_star_flag = drone_home_system	
                     has_star_flag = drone_exp_1
                     has_star_flag = drone_exp_2
                     has_star_flag = drone_exp_3
                     has_star_flag = drone_exp_4
                     has_star_flag = drone_exp_5
                     has_star_flag = drone_exp_6
                     has_star_flag = drone_exp_7
                     has_star_flag = drone_exp_8	
                     has_star_flag = drone_exp_9
                     has_star_flag = drone_exp_10					 
				}
					any_ship_in_system = {
					    exists = owner
							owner = { is_same_value = event_target:drone_country }												
						is_in_combat = no
					}				
			}			
		    # distant star big drone fleet
	        if = {
	            limit = {
					has_star_flag = drone_system_4
		        }
			random_neighbor_system = {
				ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = marauder_system
						has_star_flag = ratling_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys1
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys1_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys1_2
			    }			
			}
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys1_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }			
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 12
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys1_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys1
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys1_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys1_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys1_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys1_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
								        wait = {
									        duration = 300
									        random = 90
								        }
                                      }										
			                        }									
					            }
                        }						
					}
				}				
	        }
			}
	        }
			}
		    # drone exp system 1
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_1
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys7
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys7_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys7_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys7_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys7_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys7
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys7_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys7_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys7_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys7_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}	
		    # drone exp system 2
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_2
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys8
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys8_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys8_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys8_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 8
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys8_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys8
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys8_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys8_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys8_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys8_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}
		    # drone exp system 3
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_3
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys9
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys9_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys9_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys9_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 11
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys9_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys9
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys9_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys9_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys9_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys9_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}	
		    # drone exp system 4
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_4
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys10
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys10_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys10_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys10_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys10_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys10
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys10_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys10_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys10_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys10_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}		
		    # drone exp system 5
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_5
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys11
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys11_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys11_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys11_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 13
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys11_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys11
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys11_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys11_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys11_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys11_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}	
		    # drone exp system 6
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_6
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys12
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys12_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys12_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys12_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys12_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys12
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys12_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys12_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys12_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys12_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}		
		    # drone exp system 7
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_7
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys13
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys13_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys13_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys13_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 11
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys13_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys13
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys13_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys13_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys13_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys13_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}
		    # drone exp system 8
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_8
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys14
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys14_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys14_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys14_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys14_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys14
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys14_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys14_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys14_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys14_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}		
		    # drone exp system 9
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_9
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys15
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys15_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys15_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys15_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 12
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys15_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys15
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys15_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys15_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys15_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys15_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}
		    # drone exp system 10
	        else_if = {
	            limit = {
					has_star_flag = drone_exp_10
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys16
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys16_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys16_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys16_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			        event_target:drone_country = {
			            save_event_target_as = mining_drones
				        create_fleet = {
					        name = "NAME_Ancient_Mining_Drones"
					        effect = {
						        set_owner = event_target:drone_country
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys16_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys16
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys16_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys16_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys16_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys16_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}				
		    # normal drones fleet 1
	        else_if = {
	            limit = {
					has_star_flag = drone_system_1
		        }
			random_neighbor_system = {
                ignore_hyperlanes = no			
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys2
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys2_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys2_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys2_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 12
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys2_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys2
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys2_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys2_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys2_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys2_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
            }
	        }
	        }
			}	
		    # normal drones fleet 2
	        else_if = {
	            limit = {
					has_star_flag = drone_system_2
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}
				save_event_target_as = mod_drone_inv1_sys3
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys3_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys3_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys3_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys3_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys3
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys3_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys3_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys3_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys3_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}	
            }				
	        }
	        }
			}	
		    # normal drones destroyers
	        else_if = {
	            limit = {
					has_star_flag = drone_destroyer_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}	
				save_event_target_as = mod_drone_inv1_sys4
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys4_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys4_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys4_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys4_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys4
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys4_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys4_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys4_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys4_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}				
	        }
			}
	        }
			}	
		    # normal drones 3
	        else_if = {
	            limit = {
					has_star_flag = drone_system_3
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}		
				save_event_target_as = mod_drone_inv1_sys5
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys5_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys5_2
			    }
			}				
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys5_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 12
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys5_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys5
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys5_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys5_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys5_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys5_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}				
	        }
	        }
			}	
			}
		    # home system
	        else_if = {
	            limit = {
					has_star_flag = drone_home_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system						
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}		
				save_event_target_as = mod_drone_inv1_sys6
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys6_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys6_2
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOR = { 
						    is_planet_class = pc_gas_giant 
                            is_same_value = event_target:mod_drone_inv1_sys6_2						
						}
				    }
				    save_event_target_as = mod_drone_inv1_sys6_3
			    }				
			}		
            if = {
                limit = { NOT = { exists = event_target:mod_drone_inv1_sys6_2 } }			
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					has_star_flag = hostile_system
				}				
			  random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:drone_country }												
					    }						
					}
				}	
				save_event_target_as = mod_drone_inv1_sys6				
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_drone_inv1_sys6_1
			    }	
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOT = { is_planet_class = pc_gas_giant }
				    }
				    save_event_target_as = mod_drone_inv1_sys6_2
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
					    NOR = { 
						    is_planet_class = pc_gas_giant 
                            is_same_value = event_target:mod_drone_inv1_sys6_2						
						}
				    }
				    save_event_target_as = mod_drone_inv1_sys6_3
			    }				
			  }
			}
            }			
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys6_2 }
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
			event_target:drone_country = {
			save_event_target_as = mining_drones
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 13
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys6_tr1"
					                    is_same_value = event_target:mod_drone_inv1_sys6
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys6_tr2"
					                            is_planet = event_target:mod_drone_inv1_sys6_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys6_tr3"
					                            is_planet = event_target:mod_drone_inv1_sys6_2
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }
					}
				}
			if = {
			    limit = { exists = event_target:mod_drone_inv1_sys6_3 }				
				create_fleet = {
					name = "NAME_Ancient_Mining_Drones"
					effect = {
						set_owner = event_target:drone_country
						while = {
							count = 6
							create_ship = {
								name = ""
								design = "NAME_Ancient_Mining_Drone_Tier2"
							}
						}
						while = {
							count = 8
							create_ship = {
								name = ""
								design = "NAME_Ancient_Combat_Drone_Tier2"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Ancient_Destroyer_Tier2"
							}
						}
				        add_modifier = { modifier = tier2_drone_buff days = -1 }						
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_drone_inv1_sys6_tr4"
					                    is_same_value = event_target:mod_drone_inv1_sys6
					                }									
						            found_system = {
							            move_to = THIS
									  repeat = {
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys6_tr5"
					                            is_planet = event_target:mod_drone_inv1_sys6_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_drone_inv1_sys6_tr6"
					                            is_planet = event_target:mod_drone_inv1_sys6_3
				                            }
				                            found_planet = {
									            move_to = this
					                            orbit_planet = THIS
				                            }
										}
										wait = {
									        duration = 300
									        random = 90
								        }
									  }
			                        }									
					            }							
                        }							
					}
				}
			}
            }				
	        }
	        }			
			}			
		}
	}
}
#tyanki expand
country_event = {
	id = mod_neutral_grow.6
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    if = { limit = { exists = event_target:tiyanki_country }
	      every_system = {
		    limit = {
			    NOT = { has_star_flag = tiyanki_spawn_system }
			    any_ship_in_system = { is_ship_size = space_whale_1 }
			    any_ship_in_system = { is_ship_size = space_whale_2 }	
			    any_ship_in_system = { is_ship_size = space_whale_3 }				
			}	
				random_system_planet = {
				    limit = {
					    is_star = yes
				    }
                    save_event_target_as = mod_tyan_inv1_sys1					
        event_target:tiyanki_country = {			  
				create_fleet = {
					name = "NAME_Tiyanki_Space_Whale"
					effect = {
						set_owner = event_target:tiyanki_country					
	                random_list = {
		                10 = {
						    create_ship = {
							    name = "NAME_Bull"
							    design = "NAME_Tiyanki_Bull"
						    }
						    create_ship = {
							    name = "NAME_Cow"
							    design = "NAME_Tiyanki_Cow"
						    }
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }		
						    create_ship = {
							    name = "NAME_Hatchling"
							    design = "NAME_Tiyanki_Hatchling"
						    }							
		                }
		                15 = {
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Bull"
								    design = "NAME_Tiyanki_Bull"
							    }
						    }						
						    create_ship = {
							    name = "NAME_Cow"
							    design = "NAME_Tiyanki_Cow"
						    }	
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }		
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }								
		                }
		                15 = {
						    create_ship = {
							    name = "NAME_Bull"
							    design = "NAME_Tiyanki_Bull"
						    }						
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Cow"
								    design = "NAME_Tiyanki_Cow"
							    }
						    }	
						    create_ship = {
							    name = "NAME_Hatchling"
							    design = "NAME_Tiyanki_Hatchling"
						    }
						    create_ship = {
							    name = "NAME_Hatchling"
							    design = "NAME_Tiyanki_Hatchling"
						    }							
		                }	
		                20 = {
						    create_ship = {
							    name = "NAME_Bull"
							    design = "NAME_Tiyanki_Bull"
						    }						
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Cow"
								    design = "NAME_Tiyanki_Cow"
							    }
						    }	
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Calf"
								    design = "NAME_Tiyanki_Calf"
							    }
						    }
						    create_ship = {
							    name = "NAME_Hatchling"
							    design = "NAME_Tiyanki_Hatchling"
						    }							
		                }	
		                20 = {
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Bull"
								    design = "NAME_Tiyanki_Bull"
							    }
						    }						
						    create_ship = {
							    name = "NAME_Cow"
							    design = "NAME_Tiyanki_Cow"
						    }	
						    create_ship = {
							    name = "NAME_Calf"
							    design = "NAME_Tiyanki_Calf"
						    }							
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Hatchling"
								    design = "NAME_Tiyanki_Hatchling"
							    }
						    }							
		                }	
		                20 = {
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Bull"
								    design = "NAME_Tiyanki_Bull"
							    }
						    }						
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Cow"
								    design = "NAME_Tiyanki_Cow"
							    }
						    }	
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Calf"
								    design = "NAME_Tiyanki_Calf"
							    }
						    }	
						    while = {
							    count = 2
							    create_ship = {
								    name = "NAME_Hatchling"
								    design = "NAME_Tiyanki_Hatchling"
							    }
						    }							
		                }						
                    }
                    set_location = event_target:mod_tyan_inv1_sys1
					set_fleet_stance = passive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv4.tr5"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:mod_tyan_inv1_sys1
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv4.tr6"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS
				                                    }
			                                    }												
											}
										}
									}
					}					
				}				
		    }
			}
		}
		}
			if = {
			    limit = { exists = event_target:tiyanki_garrison_country }				
		        every_system = {	
                    limit = { has_star_flag = tiyanki_spawn_system }
					random_system_planet = {
					    limit = {
                            is_star = yes						
						}
                        event_target:tiyanki_garrison_country = {						
				            create_fleet = {
					            name = "NAME_Tiyanki_Space_Whale"
					            effect = {
						            set_owner = event_target:tiyanki_garrison_country					
	                                random_list = {
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }																						
		                                }	
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }		
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }											
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }											
                                    }
                                    set_location = PREVPREV
					                set_fleet_stance = passive
					                set_aggro_range_measure_from = return_point
					                set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv4.tr1"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:tiyanki_spawn_system
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv4.tr2"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS
				                                    }
			                                    }												
											}
										}
									}
					            }						    
					        }	
				            create_fleet = {
					            name = "NAME_Tiyanki_Space_Whale"
					            effect = {
						            set_owner = event_target:tiyanki_garrison_country					
	                                random_list = {
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }																						
		                                }	
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }		
		                                10 = {
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Bull"
							                    design = "NAME_Tiyanki_Bull"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }
						                    create_ship = {
							                    name = "NAME_Cow"
							                    design = "NAME_Tiyanki_Cow"
						                    }											
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }	
						                    create_ship = {
							                    name = "NAME_Calf"
							                    design = "NAME_Tiyanki_Calf"
						                    }											
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }
						                    create_ship = {
							                    name = "NAME_Hatchling"
							                    design = "NAME_Tiyanki_Hatchling"
						                    }							
		                                }											
                                    }
                                    set_location = PREVPREV
					                set_fleet_stance = passive
					                set_aggro_range_measure_from = return_point
					                set_aggro_range = 0
									queue_actions = {
										find_random_system = {
											trigger = {
												id = "tyan_gar_inv5.tr1"
												has_planet_class = "pc_gas_giant"
												distance = {
													source = event_target:tiyanki_spawn_system
													min_jumps = 3
												}
											}
											found_system = {
												move_to = this
			                                    find_closest_planet = {
				                                    trigger = {
					                                    id = "tyan_gar_inv5.tr2"
					                                    is_planet_class = "pc_gas_giant"
				                                    }
				                                    found_planet = {
									                    move_to = this
														orbit_planet = THIS
				                                    }
			                                    }												
											}
										}
									}
					            }						    
					        }							
                        }
			        }		
	            }
			}		
	}
}	
#cloud expand
country_event = {
	id = mod_neutral_grow.9
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    every_system = {
		    limit = {
			    any_ship_in_system = { 
				    is_ship_size = space_cloud
				    is_in_combat = no
				}
			}
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
			            any_ship_in_system = { is_ship_size = space_cloud }							
					}
				}
                save_event_target_as = mod_cloud_inv1_sys1				
			    random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_cloud_inv1_sys1_1
			    }
			}
			if = { limit = { exists = event_target:mod_cloud_inv1_sys1_1 }
			  random_system_planet = {
			    limit = {
					is_star = yes
				    }	
                    event_target:cloud_country = {
				        create_fleet = {
					        name = "NAME_Void_Cloud"
					        effect = {
						        set_owner = event_target:cloud_country
							        create_ship = {
							  	        name = ""
								        design = "NAME_Cloud_Entity"
							        }
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 500
					            auto_move_to_planet = {
                                    target = event_target:mod_cloud_inv1_sys1_1
						            clear_auto_move_on_arrival = yes
					            }							
					        }
				        }
			        }													
              }
            }	
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
						is_same_value = event_target:mod_cloud_inv1_sys1					
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system						
						any_ship_in_system = { is_ship_size = space_cloud }	
					}
				}	
                save_event_target_as = mod_cloud_inv1_sys2				
			    random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_cloud_inv1_sys2_1
			    }
			}
			if = { limit = { NOT = { exists = event_target:mod_cloud_inv1_sys2 } }	
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					 has_star_flag = hostile_system
				}	
                save_event_target_as = mod_cloud_inv1_sys2				
			    random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_cloud_inv1_sys2_1
			    }
			}			
            }			
			if = { limit = { exists = event_target:mod_cloud_inv1_sys2 }
			  random_system_planet = {
			    limit = {
					any_fleet_in_orbit = {
					    exists = owner
                        owner = { is_same_value = event_target:cloud_country }							
			            }
				    }	
                    event_target:cloud_country = {
				        create_fleet = {
					        name = "NAME_Void_Cloud"
					        effect = {
						        set_owner = event_target:cloud_country
							        create_ship = {
							  	        name = ""
								        design = "NAME_Cloud_Entity"
							        }
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 500
					            auto_move_to_planet = {
                                    target = event_target:mod_cloud_inv1_sys2_1
						            clear_auto_move_on_arrival = yes
					            }							
					        }
				        }
			        }													
              }
            }			
		}
	}
}
#amoeba expand
country_event = {
	id = mod_neutral_grow.35
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    every_system = {
		    limit = {
			    any_ship_in_system = { is_ship_size = space_amoeba_mother is_in_combat = no }				
			}
	    if = {
            limit = { exists = event_target:amoeba_country any_ship_in_system = { owner = { is_same_value = event_target:amoeba_country } } }			
			  random_system_planet = {
			    limit = {
					any_fleet_in_orbit = {
					    exists = owner
                        owner = { is_same_value = event_target:amoeba_country}							
			            }
				    }
			    save_event_target_as = mod_amoeb_sys1					
			    if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 4
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.1"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 3
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.2"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 2
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.3"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else = {
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.4"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }				
		      }
			}
	    else_if = {
            limit = { exists = event_target:amoeba_country_borderless any_ship_in_system = { owner = { is_same_value = event_target:amoeba_country_borderless } } }			
			  random_system_planet = {
			    limit = {
					any_fleet_in_orbit = {
					    exists = owner
                        owner = { is_same_value = event_target:amoeba_country_borderless}							
			            }
				    }
			    save_event_target_as = mod_amoeb_sys1					
			    if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 4
                      }
					}
				  }
                event_target:amoeba_country_borderless = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country_borderless
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.5"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 3
                      }
					}
				  }
                event_target:amoeba_country_borderless = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country_borderless
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.6"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 2
                      }
					}
				  }
                event_target:amoeba_country_borderless = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country_borderless
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.7"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}					
					}
				}
				}
                }	
			    else = {
                event_target:amoeba_country_borderless = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country_borderless
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.8"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}					
					}
				}
				}
                }				
		      }
			}	
	    else_if = {
            limit = { exists = event_target:amoeba_garrison_country any_ship_in_system = { owner = { is_same_value = event_target:amoeba_garrison_country } } }			
			  random_system_planet = {
			    limit = {
					is_star = yes
				    }
			    save_event_target_as = mod_amoeb_sys1					
			    if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 4
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.9"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 3
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.10"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else_if = {
				  limit = {
				    solar_system = {
			          count_system_ships = {
                        limit = { is_ship_size = space_amoeba_mother }
                        count > 2
                      }
					}
				  }
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.11"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
				}
                }	
			    else = {
                event_target:amoeba_country = {			  			  
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"					
					effect = {
						set_owner = event_target:amoeba_country
						random_big_amoeba = yes
						random_big_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						random_small_amoeba = yes
						set_location = PREVPREV
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
						queue_actions = {
							find_random_system = {
								trigger = {
									id = "amoeba_exp.12"
									distance = {
										source = event_target:mod_amoeb_sys1
										min_jumps = 5
									}
								}
								found_system = {
									move_to = this
								}
							}
						}						
					}
				}
                }				
		      }
			}			
			}
		}	
	}
}	
#crystal invasion
country_event = {
	id = mod_neutral_grow.36
	hide_window = yes
	is_triggered_only = yes
	immediate = {
        every_system = {
		    limit = {
			    OR = {
				     has_star_flag = blue_system
                     has_star_flag = blue2_system
					 has_star_flag = green_system
					 has_star_flag = green2_system
					 has_star_flag = red_system	
				     has_star_flag = red2_system	
				     has_star_flag = hostile_system	
                     has_star_flag = crystal_home_system	
                     has_star_flag = cryst_exp_sys					 
				}
					any_ship_in_system = {
					    exists = owner
						owner = {
						    is_same_value = event_target:crystal_country
						}
						is_in_combat = no
					}				
			}
# crystals			
		    # blue strong system
	        if = {
	            limit = {
					has_star_flag = blue_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys1				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys1_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys1_1 }
				    }
				    save_event_target_as = mod_crys_sys1_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys1_1 
							is_same_value = event_target:mod_crys_sys1_2
						}
				    }
				    save_event_target_as = mod_crys_sys1_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys1_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Sapphire_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 3
							        create_ship = {
								        name = ""
								        design = "NAME_Large_Crystal_Entity_Blue_Elite"
							        }
						        }
						        while = {
							        count = 7
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Blue_Elite"
							        }
						        }
						        while = {
							        count = 15
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Blue_Elite"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys1_tr1"
					                    is_same_value = event_target:mod_crys_sys1
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys1_tr2"
					                            is_planet = event_target:mod_crys_sys1_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys1_tr3"
					                            is_planet = event_target:mod_crys_sys1_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys1_tr4"
					                            is_planet = event_target:mod_crys_sys1_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
			      }
		        }
			}
		    # big blue system
	        else_if = {
	            limit = {
					has_star_flag = blue2_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys2				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys2_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys2_1 }
				    }
				    save_event_target_as = mod_crys_sys2_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys2_1 
							is_same_value = event_target:mod_crys_sys2_2
						}
				    }
				    save_event_target_as = mod_crys_sys2_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys2_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Guardians"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Blue_Elite"
							}
						}						
						while = {
							count = 25
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Blue_Elite"
							}						
						}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys2_tr1"
					                    is_same_value = event_target:mod_crys_sys2
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys2_tr2"
					                            is_planet = event_target:mod_crys_sys2_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys2_tr3"
					                            is_planet = event_target:mod_crys_sys2_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys2_tr4"
					                            is_planet = event_target:mod_crys_sys2_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }						
					}
				}
			}
		  }
		}		
			}	
		    # green patrool system
	        else_if = {
	            limit = {
					has_star_flag = green_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys3				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys3_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys3_1 }
				    }
				    save_event_target_as = mod_crys_sys3_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys3_1 
							is_same_value = event_target:mod_crys_sys3_2
						}
				    }
				    save_event_target_as = mod_crys_sys3_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys3_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
				   	        name = "NAME_Emerald_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
						        while = {
							        count = 2
							        create_ship = {
								        name = ""
								        design = "NAME_Large_Crystal_Entity_Green_Elite"
							        }
						        }								
						        while = {
							        count = 5
							        create_ship = {
								        name = ""
								        design = "NAME_Medium_Crystal_Entity_Green_Elite"
							        }
						        }
						        while = {
							        count = 9
							        create_ship = {
								        name = ""
								        design = "NAME_Small_Crystal_Entity_Green_Elite"
							        }
						        }
						        set_location = PREVPREV
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys3_tr1"
					                    is_same_value = event_target:mod_crys_sys3
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys3_tr2"
					                            is_planet = event_target:mod_crys_sys3_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys3_tr3"
					                            is_planet = event_target:mod_crys_sys3_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys3_tr4"
					                            is_planet = event_target:mod_crys_sys3_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
				  }
		        }
			}	
		    # big green system
	        else_if = {
	            limit = {
					has_star_flag = green2_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys4				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys4_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys4_1 }
				    }
				    save_event_target_as = mod_crys_sys4_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys4_1 
							is_same_value = event_target:mod_crys_sys4_2
						}
				    }
				    save_event_target_as = mod_crys_sys4_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys4_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Emerald_Guardians"
					effect = {
						set_owner = event_target:crystal_country
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Green_Elite"
						}
					}						
					while = {
						count = 11
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green_Elite"
						}
					}
						set_location = prevprev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys4_tr1"
					                    is_same_value = event_target:mod_crys_sys4
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys4_tr2"
					                            is_planet = event_target:mod_crys_sys4_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys4_tr3"
					                            is_planet = event_target:mod_crys_sys4_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys4_tr4"
					                            is_planet = event_target:mod_crys_sys4_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }						
					}
				}
			}
		  }
		}		
			}	
		    # big red system
	        else_if = {
	            limit = {
					has_star_flag = red_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys5				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys5_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys5_1 }
				    }
				    save_event_target_as = mod_crys_sys5_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys5_1 
							is_same_value = event_target:mod_crys_sys5_2
						}
				    }
				    save_event_target_as = mod_crys_sys5_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys5_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 6
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red_Elite"
						            }
					            }
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red_Elite"
						}
					}						
					while = {
						count = 11
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}								
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys5_tr1"
					                    is_same_value = event_target:mod_crys_sys5
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys5_tr2"
					                            is_planet = event_target:mod_crys_sys5_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys5_tr3"
					                            is_planet = event_target:mod_crys_sys5_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys5_tr4"
					                            is_planet = event_target:mod_crys_sys5_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
				  }
		        }				
			}	
		    # big red2 system
	        else_if = {
	            limit = {
					has_star_flag = red2_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys6				
			    random_system_planet = {
				    save_event_target_as = mod_crys_sys6_1
			    }
			    random_system_planet = {
				    limit = {
						NOT = { is_same_value = event_target:mod_crys_sys6_1 }
				    }
				    save_event_target_as = mod_crys_sys6_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys6_1 
							is_same_value = event_target:mod_crys_sys6_2
						}
				    }
				    save_event_target_as = mod_crys_sys6_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys6_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Guardians"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 12
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red_Elite"
						            }
					            }
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red_Elite"
						}
					}						
					while = {
						count = 21
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}								
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys6_tr1"
					                    is_same_value = event_target:mod_crys_sys6
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys6_tr2"
					                            is_planet = event_target:mod_crys_sys6_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys6_tr3"
					                            is_planet = event_target:mod_crys_sys6_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys6_tr4"
					                            is_planet = event_target:mod_crys_sys6_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
				  }
		        }				
			}	
	        else_if = {
	            limit = {
					has_star_flag = crystal_home_system
		        }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys7				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys7_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys7_1 }
				    }
				    save_event_target_as = mod_crys_sys7_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys7_1 
							is_same_value = event_target:mod_crys_sys7_2
						}
				    }
				    save_event_target_as = mod_crys_sys7_3
			    }				
            }
			if = { limit = { NOT = { exists = event_target:mod_crys_sys7 } }
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					    has_star_flag = hostile_system
				}	
			  random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
	
					}
				}					
                save_event_target_as = mod_crys_sys7				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys7_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys7_1 }
				    }
				    save_event_target_as = mod_crys_sys7_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys7_1 
							is_same_value = event_target:mod_crys_sys7_2
						}
				    }
				    save_event_target_as = mod_crys_sys7_3
			    }	
              }				
            }			
            }			
			if = { limit = { exists = event_target:mod_crys_sys7_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Ruby_Swarm"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 2
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Red_Elite"
						            }
					            }
					            while = {
						            count = 2
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Yellow_Elite"
						            }
					            }								
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Red_Elite"
						}
					}		
					while = {
						count = 4
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Yellow_Elite"
						}
					}						
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}		
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Yellow_Elite"
						}
					}					
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys7_tr1"
					                    is_same_value = event_target:mod_crys_sys7
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr2"
					                            is_planet = event_target:mod_crys_sys7_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr3"
					                            is_planet = event_target:mod_crys_sys7_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr4"
					                            is_planet = event_target:mod_crys_sys7_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
				        create_fleet = {
					        name = "NAME_Emerald_Roamers"
					        effect = {
						        set_owner = event_target:crystal_country
					            while = {
						            count = 2
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Green_Elite"
						            }
					            }
					            while = {
						            count = 2
						            create_ship = {
							            name = ""
							            design = "NAME_Large_Crystal_Entity_Blue_Elite"
						            }
					            }								
					while = {
						count = 4
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Green_Elite"
						}
					}		
					while = {
						count = 3
						create_ship = {
							name = ""
							design = "NAME_Medium_Crystal_Entity_Blue_Elite"
						}
					}						
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green_Elite"
						}
					}		
					while = {
						count = 8
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Blue_Elite"
						}
					}					
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys7_tr5"
					                    is_same_value = event_target:mod_crys_sys7
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr6"
					                            is_planet = event_target:mod_crys_sys7_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr7"
					                            is_planet = event_target:mod_crys_sys7_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys7_tr8"
					                            is_planet = event_target:mod_crys_sys7_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }						
			        }
				  }
		        }
            }		
			else_if = {
	            limit = {
					has_star_flag = cryst_exp_sys
		        }			
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys9				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys9_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys9_1 }
				    }
				    save_event_target_as = mod_crys_sys9_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys9_1 
							is_same_value = event_target:mod_crys_sys9_2
						}
				    }
				    save_event_target_as = mod_crys_sys9_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys9_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }				
			        event_target:crystal_country = {
			create_fleet = {
				name = "NAME_Shardlings"
				effect = {
					set_owner = event_target:crystal_country
                    add_modifier = { modifier = for_solo_buff_1 days = -1 } 	
                    add_modifier = { modifier = for_solo_buff_2 days = -1 } 		
                    add_modifier = { modifier = for_solo_buff_3 days = -1 } 	
                    add_modifier = { modifier = for_solo_buff_4 days = -1 }
                    add_modifier = { modifier = for_solo_buff_5 days = -1 }				
                    add_modifier = { modifier = for_solo_buff_6 days = -1 }	
                    add_modifier = { modifier = basic_buff_10 days = -1 }					
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					create_ship = {
						name = ""
						design = "NAME_Small_Crystal_Entity_Blue_Elite"
					}
					set_fleet_formation = {
						position = { x = 14.0	y = -3.0	} #9
						position = { x = 1.3	y = -11.0	} #8
						position = { x = -10.5	y = 1.0		} #7
						position = { x = 3.0	y = 8.0		} #6
						position = { x = -4.3	y = -7.0	} #5
						position = { x = 8.0	y = 9.0		} #4
						position = { x = -4.0	y = 7.3		} #3 
						position = { x = 7.5	y = -10.5	} #2
						position = { x = 0.0	y = 0.0		} #1
					}
					set_formation_scale = 0.5
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 140
					set_location = {
						target = prevprev
						distance = 20
						angle = 20
					}
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys9_tr1"
					                    is_same_value = event_target:mod_crys_sys9
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys9_tr2"
					                            is_planet = event_target:mod_crys_sys9_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys9_tr3"
					                            is_planet = event_target:mod_crys_sys9_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys9_tr4"
					                            is_planet = event_target:mod_crys_sys9_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
				  }
		        }	
			}			
			else = {
			random_neighbor_system = {
			    ignore_hyperlanes = no
			    limit = {
					NOR = {
					    has_star_flag = hostile_system
						has_star_flag = ratling_system	
						has_star_flag = marauder_system
					    any_ship_in_system = {
					        exists = owner
							    owner = { is_same_value = event_target:crystal_country }												
					    }						
					}
				}	
                save_event_target_as = mod_crys_sys8				
			    random_system_planet = {
				    limit = {
					    is_star = no
				    }
				    save_event_target_as = mod_crys_sys8_1
			    }
			    random_system_planet = {
				    limit = {
					    is_star = no
						NOT = { is_same_value = event_target:mod_crys_sys8_1 }
				    }
				    save_event_target_as = mod_crys_sys8_2
			    }	
			    random_system_planet = {
				    limit = {
					    NOR = { 
						    is_same_value = event_target:mod_crys_sys8_1 
							is_same_value = event_target:mod_crys_sys8_2
						}
				    }
				    save_event_target_as = mod_crys_sys8_3
			    }				
            }
			if = { limit = { exists = event_target:mod_crys_sys8_3 } 			
		        random_system_planet = {
			        limit = { 
					    is_star = yes
				    }
			        event_target:crystal_country = {
				        create_fleet = {
					        name = "NAME_Shards_of_Obsidian"
					        effect = {
						        set_owner = event_target:crystal_country
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Blue_Elite"
						}
					}	
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Red_Elite"
						}
					}							
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Green_Elite"
						}
					}
					while = {
						count = 7
						create_ship = {
							name = ""
							design = "NAME_Small_Crystal_Entity_Yellow_Elite"
						}
					}						
						        set_location = prevprev
						        set_fleet_stance = aggressive
						        set_aggro_range_measure_from = self
						        set_aggro_range = 150
						queue_actions = {
					            find_closest_system = {
						            trigger = {
							            id = "mod_crys_inv1_sys8_tr1"
					                    is_same_value = event_target:mod_crys_sys8
					                }									
						            found_system = {
							            move_to = THIS
						              repeat = {										
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys8_tr2"
					                            is_planet = event_target:mod_crys_sys8_1
				                            }
				                            found_planet = {
									            move_to = this
				                            }
			                            }	
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys8_tr3"
					                            is_planet = event_target:mod_crys_sys8_2
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}
			                            find_closest_planet = {
				                            trigger = {
					                            id = "mod_crys_inv1_sys8_tr4"
					                            is_planet = event_target:mod_crys_sys8_3
				                            }
				                            found_planet = {
									            move_to = this
				                            }
										}										
			                          }									
					                }
                            }
                        }								
					        }
				        }
			        }
				  }
		        }	
			}
		}
	}
}
#pirates attack
country_event = {
	id = mod_neutral_grow.37
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    every_country = {
		    limit = { 
			    OR = {
				    has_country_flag = pir_count_fl 
					AND = {
					    exists = event_target:pirate_country
					    is_same_value = event_target:pirate_country
					}
				}
			}
			country_event = { id = mod_neutral_grow.39 days = 5 }
		}
	}
}
country_event = {
	id = mod_neutral_grow.39
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
		create_leader = {
			class = admiral
			species = owner_main_species
			name = random
			skill = 2
			traits = {
				trait = random_trait
			}
		}
	    every_system = {
		    limit = {
			    any_ship_in_system = {
				    OR = {
		                is_ship_size = pirate_station
		                is_ship_size = pirate_station1
		                is_ship_size = pirate_station2
		                is_ship_size = pirate_station3						
					}
					owner = { is_same_value = prevprevprev }
	            }
            }				
			    random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_pirate_inv1_from
			    }				
			closest_system = {
				max_steps = 10
			    limit = {
				    NOT = { has_star_flag = ratling_system }
				    exists = space_owner
					space_owner = { is_country_type = default }
					has_trade_route = yes
				    trade_route_value > 29
				}				
			    random_system_planet = {
				    limit = {
					    is_star = yes
				    }
				    save_event_target_as = mod_pirate_inv1_sys1
					set_timed_planet_flag = { flag = privater_target_timed days = 900 }
			    }				
            }			
            if = { limit = { exists = event_target:mod_pirate_inv1_sys1 }				
                create_fleet = {
					name = "NAME_Pirate_Fleet"
					effect = {
						set_owner = prevprev					
	                random_list = {
		                10 = {
	while = {
		count = 11
		create_ship = {
			name = random
			design = "NAME_Reaver"
			graphical_culture = "pirate_01"
		}
	}
	while = {
		count = 11
		create_ship = {
			name = random
			design = "NAME_Brigand"
			graphical_culture = "pirate_01"
		}
	}						
		                }
		                10 = {
	while = {
		count = 10
		create_ship = {
			name = random
			design = "NAME_Skull"
			graphical_culture = "pirate_01"
		}
	}
	while = {
		count = 10
		create_ship = {
			name = random
			design = "NAME_Brigand"
			graphical_culture = "pirate_01"
		}
	}							
		                }
		                10 = {
	while = {
		count = 12
		create_ship = {
			name = random
			design = "NAME_Skull"
			graphical_culture = "pirate_01"
		}
	}
	while = {
		count = 6
		create_ship = {
			name = random
			design = "NAME_Marauder"
			graphical_culture = "pirate_01"
		}
	}						
		                }	
		                10 = {
	while = {
		count = 19
		create_ship = {
			name = random
			design = "NAME_Reaver"
			graphical_culture = "pirate_01"
		}
	}
	while = {
		count = 8
		create_ship = {
			name = random
			design = "NAME_Brigand"
			graphical_culture = "pirate_01"
		}
	}							
		                }						
                    }
					assign_leader = last_created_leader
                    set_location = event_target:mod_pirate_inv1_from
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 300
					if = { 
						limit = { years_passed > 140 } 
						add_modifier = { modifier = goo_buff_1 days = -1 } 
						add_modifier = { modifier = goo_buff_2 days = -1 } 
						add_modifier = { modifier = khan_buff_2 days = -1 } 			
					}
					else_if = { 
						limit = { years_passed > 130 } 
						add_modifier = { modifier = goo_buff_1 days = -1 } 
						add_modifier = { modifier = goo_buff_2 days = -1 } 			
					}	
					else_if = { 
						limit = { years_passed > 100 } 
						add_modifier = { modifier = goo_buff_1 days = -1 } 		
					}		
					auto_move_to_planet = {
                            target = event_target:mod_pirate_inv1_sys1
						    clear_auto_move_on_arrival = yes
					}
				    }					
				}				
			}
		}
	}
}
event = { 
	id = mod_neutral_grow.0
	hide_window = yes
	is_triggered_only = yes
	immediate = {	
	    every_country = {
	        limit = { is_country_type = shroud }
				if = {
				    limit = { NOT = { exists = event_target:mod_events_caller } }
				    save_global_event_target_as = mod_events_caller
				}			
	    }
#test	    every_country = {
#	        limit = { is_country_type = default }
#			every_owned_planet = { limit = { is_capital = yes}
#			    add_modifier = {modifier = pm_fraction_influence days = -1 }
#			}
#        }			
	    every_country = {
	        limit = { 
			    OR = {
			        has_country_flag = humans_early_space_age 
			        has_country_flag = humans_machine_age 
			        has_country_flag = humans_late_medieval_age					
				}
			}
			save_event_target_as = mod_sol_country	
            every_owned_army = {
			    remove_army = yes
			}			
		    if = { limit = {has_country_flag = humans_late_medieval_age}
			    every_owned_planet = { limit = {num_pops > 1} 
					while = {
						count = 3
						create_army = {
							name = "NAME_Feudal_Levies"
							owner = event_target:mod_sol_country
							species = owner_main_species
							type = "primitive_army1"
						}						
					}
						create_army = {
							name = "Vikings"
							owner = event_target:mod_sol_country
							species = owner_main_species
							type = "primitive_army2"
						}
						create_army = {
							name = "Mongol Horde"
							owner = event_target:mod_sol_country
							species = owner_main_species
							type = "primitive_army2"
						}						
				}
			}
		    else_if = { limit = {has_country_flag = humans_machine_age}
			    every_owned_planet = { limit = {num_pops > 1} 
					create_army = {
						name = "NAME_German_Wehrmacht"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "industrial_army5"
					}
					create_army = {
						name = "NAME_Soviet_Red_Army"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "industrial_army4"
					}
					create_army = {
						name = "NAME_US_Armed_Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "industrial_army3"
					}
					create_army = {
						name = "NAME_British_Armed_Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "industrial_army1"
					}
					create_army = {
						name = "NAME_Imperial_Japanese_Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "industrial_army2"
					}				    
				}
			}	
		    else_if = { limit = {has_country_flag = humans_early_space_age}
			    every_owned_planet = { limit = {num_pops > 1} 
					create_army = {
						name = "US Armed Forces West"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army2"
					}
					create_army = {
						name = "US Armed Forces East"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army2"
					}
					create_army = {
						name = "Chinese PLA"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army3"
					}
					create_army = {
						name = "Russian Armed Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army1"
					}
					create_army = {
						name = "EU Combined Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army2"
					}				
					create_army = {
						name = "India Armed Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army3"
					}					
					create_army = {
						name = "Pakistan Armed Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army1"
					}
					create_army = {
						name = "North Korea Armed Forces"
						owner = event_target:mod_sol_country
						species = owner_main_species
						type = "postatomic_army1"
					}			    
				}
			}			
	    }			
        every_system = {
		    limit = {
				has_star_flag = relic_system_1	
				any_ship_in_system = {
					exists = owner					
					is_ship_size = ancient_destroyer
				}
            }
            every_fleet_in_system = {
				limit = {
					count_owned_ship = {
						limit = {
							is_ship_size = ancient_destroyer
						}
					    count > 0
					}
				}
				if = {
				    limit = { NOT = { exists = event_target:mod_relic1_drones } }
				    owner = { save_global_event_target_as = mod_relic1_drones }
				}
			}	
        }
    }		
}

event = { 
	id = mod_neutral_grow.38
	is_triggered_only = yes
	title = "mod_warning.1.name"
	desc = "mod_warning.1.desc"
	picture = GFX_evt_mining_station
	
	immediate = {
	}
	
	option = {
		name = mod_warning.1.a
		hidden_effect = {
		}
	}
}
country_event = { 
	id = mod_neutral_grow.41
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    every_country = {
		    limit = {
			    is_country_type = default
				is_ai = yes
			}
			set_country_flag = 50_passed
		}
	}
}
country_event = { 
	id = mod_neutral_grow.42
	hide_window = yes
	is_triggered_only = yes		
	immediate = {
	    every_country = {
		    limit = {
			    is_country_type = default
				is_ai = yes
			}
            set_country_flag = 100_passed
			remove_country_flag = 50_passed
		}
	}
}